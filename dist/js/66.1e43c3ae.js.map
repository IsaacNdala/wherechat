{"version":3,"file":"js/66.1e43c3ae.js","mappings":"+FACAA,EAAOC,QAAgC,oBAAfC,aAAiD,oBAAZC,U,iCCA7D,IAgCIC,EAAMC,EAAaC,EAhCnBC,EAAsB,EAAQ,MAC9BC,EAAc,EAAQ,MACtBC,EAAS,EAAQ,MACjBC,EAAa,EAAQ,KACrBC,EAAW,EAAQ,KACnBC,EAAS,EAAQ,MACjBC,EAAU,EAAQ,KAClBC,EAAc,EAAQ,MACtBC,EAA8B,EAAQ,MACtCC,EAAW,EAAQ,MACnBC,EAAiB,UACjBC,EAAgB,EAAQ,MACxBC,EAAiB,EAAQ,MACzBC,EAAiB,EAAQ,MACzBC,EAAkB,EAAQ,MAC1BC,EAAM,EAAQ,MAEdC,EAAYd,EAAOc,UACnBC,EAAqBD,GAAaA,EAAUE,UAC5CC,EAAoBjB,EAAOiB,kBAC3BC,EAA6BD,GAAqBA,EAAkBD,UACpEG,EAAaL,GAAaJ,EAAeI,GACzCM,EAAsBL,GAAsBL,EAAeK,GAC3DM,EAAkBC,OAAON,UACzBO,EAAYvB,EAAOuB,UAEnBC,EAAgBZ,EAAgB,eAChCa,EAAkBZ,EAAI,mBACtBa,EAA0Bb,EAAI,2BAE9Bc,EAA4B7B,KAAyBa,GAA4C,UAA1BP,EAAQJ,EAAO4B,OACtFC,GAA2B,EAG3BC,EAA6B,CAC/BhB,UAAW,EACXiB,WAAY,EACZd,kBAAmB,EACnBe,WAAY,EACZC,YAAa,EACbC,WAAY,EACZC,YAAa,EACbC,aAAc,EACdC,aAAc,GAGZC,EAA8B,CAChCC,cAAe,EACfC,eAAgB,GAGdC,EAAS,SAAgBC,GAC3B,IAAKxC,EAASwC,GAAK,OAAO,EAC1B,IAAIC,EAAQvC,EAAQsC,GACpB,MAAiB,aAAVC,GACFxC,EAAO2B,EAA4Ba,IACnCxC,EAAOmC,EAA6BK,IAGvCC,EAAe,SAAUF,GAC3B,IAAKxC,EAASwC,GAAK,OAAO,EAC1B,IAAIC,EAAQvC,EAAQsC,GACpB,OAAOvC,EAAO2B,EAA4Ba,IACrCxC,EAAOmC,EAA6BK,IAGvCE,EAAc,SAAUH,GAC1B,GAAIE,EAAaF,GAAK,OAAOA,EAC7B,MAAMnB,EAAU,gCAGduB,EAAyB,SAAUC,GACrC,GAAI9C,EAAW8C,MAAQpC,GAAkBF,EAAcU,EAAY4B,IAAK,OAAOA,EAC/E,MAAMxB,EAAUlB,EAAY0C,GAAK,sCAG/BC,EAAyB,SAAUC,EAAKC,EAAUC,EAAQC,GAC5D,GAAKrD,EAAL,CACA,GAAIoD,EAAQ,IAAK,IAAIE,KAASvB,EAA4B,CACxD,IAAIwB,EAAwBtD,EAAOqD,GACnC,GAAIC,GAAyBnD,EAAOmD,EAAsBtC,UAAWiC,GAAM,WAClEK,EAAsBtC,UAAUiC,GACvC,MAAOM,GAEP,IACED,EAAsBtC,UAAUiC,GAAOC,EACvC,MAAOM,MAGRpC,EAAoB6B,KAAQE,GAC/B5C,EAASa,EAAqB6B,EAAKE,EAASD,EACxCvB,GAA6BZ,EAAmBkC,IAAQC,EAAUE,KAItEK,EAA+B,SAAUR,EAAKC,EAAUC,GAC1D,IAAIE,EAAOC,EACX,GAAKvD,EAAL,CACA,GAAIY,EAAgB,CAClB,GAAIwC,EAAQ,IAAKE,KAASvB,EAExB,GADAwB,EAAwBtD,EAAOqD,GAC3BC,GAAyBnD,EAAOmD,EAAuBL,GAAM,WACxDK,EAAsBL,GAC7B,MAAOM,IAEX,GAAKpC,EAAW8B,KAAQE,EAKjB,OAHL,IACE,OAAO5C,EAASY,EAAY8B,EAAKE,EAASD,EAAWvB,GAA6BR,EAAW8B,IAAQC,GACrG,MAAOK,KAGb,IAAKF,KAASvB,EACZwB,EAAwBtD,EAAOqD,IAC3BC,GAA2BA,EAAsBL,KAAQE,GAC3D5C,EAAS+C,EAAuBL,EAAKC,KAK3C,IAAKvD,KAAQmC,EACXlC,EAAcI,EAAOL,GACrBE,EAAYD,GAAeA,EAAYoB,UACnCnB,EAAWS,EAA4BT,EAAW6B,EAAyB9B,GAC1E+B,GAA4B,EAGnC,IAAKhC,KAAQ2C,EACX1C,EAAcI,EAAOL,GACrBE,EAAYD,GAAeA,EAAYoB,UACnCnB,GAAWS,EAA4BT,EAAW6B,EAAyB9B,GAIjF,KAAK+B,IAA8B1B,EAAWkB,IAAeA,IAAeuC,SAAS1C,aAEnFG,EAAa,WACX,MAAMI,EAAU,yBAEdI,GAA2B,IAAKhC,KAAQmC,EACtC9B,EAAOL,IAAOgB,EAAeX,EAAOL,GAAOwB,GAInD,KAAKQ,IAA8BP,GAAuBA,IAAwBC,KAChFD,EAAsBD,EAAWH,UAC7BW,GAA2B,IAAKhC,KAAQmC,EACtC9B,EAAOL,IAAOgB,EAAeX,EAAOL,GAAMqB,UAAWI,GAS7D,GAJIO,GAA6BjB,EAAeQ,KAAgCE,GAC9ET,EAAeO,EAA4BE,GAGzCrB,IAAgBI,EAAOiB,EAAqBI,GAK9C,IAAK7B,KAJLkC,GAA2B,EAC3BrB,EAAeY,EAAqBI,EAAe,CAAEmC,IAAK,WACxD,OAAOzD,EAAS0D,MAAQA,KAAKnC,QAAmBoC,KAErC/B,EAAgC9B,EAAOL,IAClDW,EAA4BN,EAAOL,GAAO8B,EAAiB9B,GAI/DJ,EAAOC,QAAU,CACfmC,0BAA2BA,EAC3BD,wBAAyBA,EACzBD,gBAAiBI,GAA4BJ,EAC7CoB,YAAaA,EACbC,uBAAwBA,EACxBE,uBAAwBA,EACxBS,6BAA8BA,EAC9BhB,OAAQA,EACRG,aAAcA,EACdzB,WAAYA,EACZC,oBAAqBA,I,qBClLvB,IAAI0C,EAAQ,EAAQ,MAEpBvE,EAAOC,SAAWsE,GAAM,WACtB,SAASC,KAGT,OAFAA,EAAE/C,UAAUgD,YAAc,KAEnB1C,OAAOZ,eAAe,IAAIqD,KAASA,EAAE/C,c,qBCN9C,IAAIhB,EAAS,EAAQ,MACjBG,EAAS,EAAQ,MACjBF,EAAa,EAAQ,KACrBgE,EAAW,EAAQ,MACnBC,EAAY,EAAQ,MACpBC,EAA2B,EAAQ,MAEnCC,EAAWF,EAAU,YACrB5C,EAAStB,EAAOsB,OAChBD,EAAkBC,EAAON,UAI7BzB,EAAOC,QAAU2E,EAA2B7C,EAAOZ,eAAiB,SAAU2D,GAC5E,IAAIC,EAASL,EAASI,GACtB,GAAIlE,EAAOmE,EAAQF,GAAW,OAAOE,EAAOF,GAC5C,IAAIJ,EAAcM,EAAON,YACzB,OAAI/D,EAAW+D,IAAgBM,aAAkBN,EACxCA,EAAYhD,UACZsD,aAAkBhD,EAASD,EAAkB,O,qBCnBxD,IAAIrB,EAAS,EAAQ,MACjBuE,EAAoB,EAAQ,MAE5BC,EAAaxE,EAAOwE,WAExBjF,EAAOC,QAAU,SAAUkD,EAAI+B,GAC7B,IAAIC,EAASH,EAAkB7B,GAC/B,GAAIgC,EAASD,EAAO,MAAMD,EAAW,gBACrC,OAAOE,I,qBCRT,IAAI1E,EAAS,EAAQ,MACjB2E,EAAsB,EAAQ,MAE9BH,EAAaxE,EAAOwE,WAExBjF,EAAOC,QAAU,SAAUkD,GACzB,IAAIkC,EAASD,EAAoBjC,GACjC,GAAIkC,EAAS,EAAG,MAAMJ,EAAW,qCACjC,OAAOI,I,kCCPT,IAAIC,EAAsB,EAAQ,KAC9BC,EAAoB,EAAQ,MAC5BH,EAAsB,EAAQ,MAE9B9B,EAAcgC,EAAoBhC,YAClCG,EAAyB6B,EAAoB7B,uBAIjDA,EAAuB,MAAM,SAAY+B,GACvC,IAAIV,EAAIxB,EAAYe,MAChBoB,EAAMF,EAAkBT,GACxBY,EAAgBN,EAAoBI,GACpCG,EAAID,GAAiB,EAAIA,EAAgBD,EAAMC,EACnD,OAAQC,EAAI,GAAKA,GAAKF,OAAOnB,EAAYQ,EAAEa,O,kCCd7C,IAAIlF,EAAS,EAAQ,MACjBmF,EAAO,EAAQ,MACfN,EAAsB,EAAQ,KAC9BC,EAAoB,EAAQ,MAC5BM,EAAW,EAAQ,MACnBC,EAAkB,EAAQ,MAC1BvB,EAAQ,EAAQ,MAEhBU,EAAaxE,EAAOwE,WACpB1D,EAAYd,EAAOc,UACnBC,EAAqBD,GAAaA,EAAUE,UAC5CsE,EAAOvE,GAAsBA,EAAmBwE,IAChD1C,EAAcgC,EAAoBhC,YAClCG,EAAyB6B,EAAoB7B,uBAE7CwC,GAAiD1B,GAAM,WAEzD,IAAI2B,EAAQ,IAAIxE,kBAAkB,GAElC,OADAkE,EAAKG,EAAMG,EAAO,CAAEC,OAAQ,EAAG,EAAG,GAAK,GACnB,IAAbD,EAAM,MAIXE,EAAgBH,GAAiDX,EAAoBlD,2BAA6BmC,GAAM,WAC1H,IAAI2B,EAAQ,IAAI3E,EAAU,GAG1B,OAFA2E,EAAMF,IAAI,GACVE,EAAMF,IAAI,IAAK,GACK,IAAbE,EAAM,IAAyB,IAAbA,EAAM,MAKjCzC,EAAuB,OAAO,SAAa4C,GACzC/C,EAAYe,MACZ,IAAIc,EAASU,EAASS,UAAUH,OAAS,EAAIG,UAAU,QAAKhC,EAAW,GACnEiC,EAAMT,EAAgBO,GAC1B,GAAIJ,EAA+C,OAAOL,EAAKG,EAAM1B,KAAMkC,EAAKpB,GAChF,IAAIgB,EAAS9B,KAAK8B,OACdV,EAAMF,EAAkBgB,GACxBf,EAAQ,EACZ,GAAIC,EAAMN,EAASgB,EAAQ,MAAMlB,EAAW,gBAC5C,MAAOO,EAAQC,EAAKpB,KAAKc,EAASK,GAASe,EAAIf,QAC7CS,GAAiDG,I,iOC3CrD,MAAMI,EAAezE,OAAO0E,OAAO,MACnCD,EAAa,QAAU,IACvBA,EAAa,SAAW,IACxBA,EAAa,QAAU,IACvBA,EAAa,QAAU,IACvBA,EAAa,WAAa,IAC1BA,EAAa,WAAa,IAC1BA,EAAa,QAAU,IACvB,MAAME,EAAuB3E,OAAO0E,OAAO,MAC3C1E,OAAO4E,KAAKH,GAAcI,SAAQC,IAC9BH,EAAqBF,EAAaK,IAAQA,KAE9C,MAAMC,EAAe,CAAEC,KAAM,QAASC,KAAM,gBCXtCC,EAAiC,oBAATC,MACT,qBAATA,MACqC,6BAAzCnF,OAAON,UAAU0F,SAASvB,KAAKsB,MACjCE,EAA+C,oBAAhBlH,YAE/BgD,EAASmE,GAC0B,oBAAvBnH,YAAYgD,OACpBhD,YAAYgD,OAAOmE,GACnBA,GAAOA,EAAIC,kBAAkBpH,YAEjCqH,EAAe,EAAGR,KAAAA,EAAMC,KAAAA,GAAQQ,EAAgBC,IAC9CR,GAAkBD,aAAgBE,KAC9BM,EACOC,EAAST,GAGTU,EAAmBV,EAAMS,GAG/BL,IACJJ,aAAgB9G,aAAegD,EAAO8D,IACnCQ,EACOC,EAAST,GAGTU,EAAmB,IAAIR,KAAK,CAACF,IAAQS,GAI7CA,EAASjB,EAAaO,IAASC,GAAQ,KAE5CU,EAAqB,CAACV,EAAMS,KAC9B,MAAME,EAAa,IAAIC,WAKvB,OAJAD,EAAWE,OAAS,WAChB,MAAMC,EAAUH,EAAWtC,OAAO0C,MAAM,KAAK,GAC7CN,EAAS,IAAMK,IAEZH,EAAWK,cAAchB,IAEpC,Q,gBCxCA,MAAMiB,EAAQ,mEAERC,EAA+B,qBAAf1F,WAA6B,GAAK,IAAIA,WAAW,KACvE,IAAK,IAAI2F,GAAI,EAAGA,GAAIF,EAAM9B,OAAQgC,KAC9BD,EAAOD,EAAMG,WAAWD,KAAMA,GAE3B,MAgBME,EAAUC,IACnB,IAA8DH,EAAUI,EAAUC,EAAUC,EAAUC,EAAlGC,EAA+B,IAAhBL,EAAOnC,OAAeV,EAAM6C,EAAOnC,OAAWyC,EAAI,EACnC,MAA9BN,EAAOA,EAAOnC,OAAS,KACvBwC,IACkC,MAA9BL,EAAOA,EAAOnC,OAAS,IACvBwC,KAGR,MAAME,EAAc,IAAI3I,YAAYyI,GAAeG,EAAQ,IAAItG,WAAWqG,GAC1E,IAAKV,EAAI,EAAGA,EAAI1C,EAAK0C,GAAK,EACtBI,EAAWL,EAAOI,EAAOF,WAAWD,IACpCK,EAAWN,EAAOI,EAAOF,WAAWD,EAAI,IACxCM,EAAWP,EAAOI,EAAOF,WAAWD,EAAI,IACxCO,EAAWR,EAAOI,EAAOF,WAAWD,EAAI,IACxCW,EAAMF,KAAQL,GAAY,EAAMC,GAAY,EAC5CM,EAAMF,MAAoB,GAAXJ,IAAkB,EAAMC,GAAY,EACnDK,EAAMF,MAAoB,EAAXH,IAAiB,EAAiB,GAAXC,EAE1C,OAAOG,GCtCLzB,EAA+C,oBAAhBlH,YAC/B6I,EAAe,CAACC,EAAeC,KACjC,GAA6B,kBAAlBD,EACP,MAAO,CACHjC,KAAM,UACNC,KAAMkC,EAAUF,EAAeC,IAGvC,MAAMlC,EAAOiC,EAAcG,OAAO,GAClC,GAAa,MAATpC,EACA,MAAO,CACHA,KAAM,UACNC,KAAMoC,EAAmBJ,EAAcK,UAAU,GAAIJ,IAG7D,MAAMK,EAAa5C,EAAqBK,GACxC,OAAKuC,EAGEN,EAAc7C,OAAS,EACxB,CACEY,KAAML,EAAqBK,GAC3BC,KAAMgC,EAAcK,UAAU,IAEhC,CACEtC,KAAML,EAAqBK,IARxBD,GAWTsC,EAAqB,CAACpC,EAAMiC,KAC9B,GAAI7B,EAAuB,CACvB,MAAMmC,EAAUlB,EAAOrB,GACvB,OAAOkC,EAAUK,EAASN,GAG1B,MAAO,CAAEX,QAAQ,EAAMtB,KAAAA,IAGzBkC,EAAY,CAAClC,EAAMiC,KACrB,OAAQA,GACJ,IAAK,OACD,OAAOjC,aAAgB9G,YAAc,IAAIgH,KAAK,CAACF,IAASA,EAC5D,IAAK,cACL,QACI,OAAOA,IAGnB,QC9CA,MAAMwC,EAAYC,OAAOC,aAAa,IAChCC,EAAgB,CAACC,EAASnC,KAE5B,MAAMtB,EAASyD,EAAQzD,OACjB0D,EAAiB,IAAIC,MAAM3D,GACjC,IAAI4D,EAAQ,EACZH,EAAQhD,SAAQ,CAACoD,EAAQ7B,KAErBZ,EAAayC,GAAQ,GAAOhB,IACxBa,EAAe1B,GAAKa,IACde,IAAU5D,GACZsB,EAASoC,EAAeI,KAAKT,WAKvCU,EAAgB,CAACC,EAAgBlB,KACnC,MAAMY,EAAiBM,EAAepC,MAAMyB,GACtCI,EAAU,GAChB,IAAK,IAAIzB,EAAI,EAAGA,EAAI0B,EAAe1D,OAAQgC,IAAK,CAC5C,MAAMiC,EAAgBrB,EAAac,EAAe1B,GAAIc,GAEtD,GADAW,EAAQS,KAAKD,GACc,UAAvBA,EAAcrD,KACd,MAGR,OAAO6C,GAEEU,EAAW,ECxBjB,SAASC,EAAQlD,GACtB,GAAIA,EAAK,OAAOmD,EAAMnD,GAWxB,SAASmD,EAAMnD,GACb,IAAK,IAAIR,KAAO0D,EAAQ9I,UACtB4F,EAAIR,GAAO0D,EAAQ9I,UAAUoF,GAE/B,OAAOQ,EAYTkD,EAAQ9I,UAAUgJ,GAClBF,EAAQ9I,UAAUiJ,iBAAmB,SAASC,EAAOC,GAInD,OAHAvG,KAAKwG,WAAaxG,KAAKwG,YAAc,IACpCxG,KAAKwG,WAAW,IAAMF,GAAStG,KAAKwG,WAAW,IAAMF,IAAU,IAC7DN,KAAKO,GACDvG,MAaTkG,EAAQ9I,UAAUqJ,KAAO,SAASH,EAAOC,GACvC,SAASH,IACPpG,KAAK0G,IAAIJ,EAAOF,GAChBG,EAAGI,MAAM3G,KAAMiC,WAKjB,OAFAmE,EAAGG,GAAKA,EACRvG,KAAKoG,GAAGE,EAAOF,GACRpG,MAaTkG,EAAQ9I,UAAUsJ,IAClBR,EAAQ9I,UAAUwJ,eAClBV,EAAQ9I,UAAUyJ,mBAClBX,EAAQ9I,UAAU0J,oBAAsB,SAASR,EAAOC,GAItD,GAHAvG,KAAKwG,WAAaxG,KAAKwG,YAAc,GAGjC,GAAKvE,UAAUH,OAEjB,OADA9B,KAAKwG,WAAa,GACXxG,KAIT,IAUI+G,EAVAC,EAAYhH,KAAKwG,WAAW,IAAMF,GACtC,IAAKU,EAAW,OAAOhH,KAGvB,GAAI,GAAKiC,UAAUH,OAEjB,cADO9B,KAAKwG,WAAW,IAAMF,GACtBtG,KAKT,IAAK,IAAI8D,EAAI,EAAGA,EAAIkD,EAAUlF,OAAQgC,IAEpC,GADAiD,EAAKC,EAAUlD,GACXiD,IAAOR,GAAMQ,EAAGR,KAAOA,EAAI,CAC7BS,EAAUC,OAAOnD,EAAG,GACpB,MAUJ,OAJyB,IAArBkD,EAAUlF,eACL9B,KAAKwG,WAAW,IAAMF,GAGxBtG,MAWTkG,EAAQ9I,UAAU8J,KAAO,SAASZ,GAChCtG,KAAKwG,WAAaxG,KAAKwG,YAAc,GAKrC,IAHA,IAAIW,EAAO,IAAI1B,MAAMxD,UAAUH,OAAS,GACpCkF,EAAYhH,KAAKwG,WAAW,IAAMF,GAE7BxC,EAAI,EAAGA,EAAI7B,UAAUH,OAAQgC,IACpCqD,EAAKrD,EAAI,GAAK7B,UAAU6B,GAG1B,GAAIkD,EAAW,CACbA,EAAYA,EAAUI,MAAM,GACnBtD,EAAI,EAAb,IAAK,IAAW1C,EAAM4F,EAAUlF,OAAQgC,EAAI1C,IAAO0C,EACjDkD,EAAUlD,GAAG6C,MAAM3G,KAAMmH,GAI7B,OAAOnH,MAITkG,EAAQ9I,UAAUiK,aAAenB,EAAQ9I,UAAU8J,KAUnDhB,EAAQ9I,UAAUkK,UAAY,SAAShB,GAErC,OADAtG,KAAKwG,WAAaxG,KAAKwG,YAAc,GAC9BxG,KAAKwG,WAAW,IAAMF,IAAU,IAWzCJ,EAAQ9I,UAAUmK,aAAe,SAASjB,GACxC,QAAUtG,KAAKsH,UAAUhB,GAAOxE,QCvK3B,MAAM0F,EAAiB,KACN,qBAATC,KACAA,KAEgB,qBAAXC,OACLA,OAGA5H,SAAS,cAATA,GARe,GCCvB,SAAS6H,EAAK3E,KAAQ4E,GACzB,OAAOA,EAAKC,QAAO,CAACC,EAAKxG,KACjB0B,EAAI+E,eAAezG,KACnBwG,EAAIxG,GAAK0B,EAAI1B,IAEVwG,IACR,IAGP,MAAME,EAAqBC,WACrBC,EAAuBC,aACtB,SAASC,EAAsBpF,EAAKqF,GACnCA,EAAKC,iBACLtF,EAAIuF,aAAeP,EAAmBQ,KAAKC,GAC3CzF,EAAI0F,eAAiBR,EAAqBM,KAAKC,KAG/CzF,EAAIuF,aAAeN,WAAWO,KAAKC,GACnCzF,EAAI0F,eAAiBP,aAAaK,KAAKC,IAI/C,MAAME,EAAkB,KAEjB,SAASC,EAAW5F,GACvB,MAAmB,kBAARA,EACA6F,EAAW7F,GAGf8F,KAAKC,MAAM/F,EAAI4F,YAAc5F,EAAIgG,MAAQL,GAEpD,SAASE,EAAWI,GAChB,IAAIC,EAAI,EAAGpH,EAAS,EACpB,IAAK,IAAIgC,EAAI,EAAGqF,EAAIF,EAAInH,OAAQgC,EAAIqF,EAAGrF,IACnCoF,EAAID,EAAIlF,WAAWD,GACfoF,EAAI,IACJpH,GAAU,EAELoH,EAAI,KACTpH,GAAU,EAELoH,EAAI,OAAUA,GAAK,MACxBpH,GAAU,GAGVgC,IACAhC,GAAU,GAGlB,OAAOA,EC/CX,MAAMsH,UAAuBC,MACzBjJ,YAAYkJ,EAAQC,EAAaC,GAC7BC,MAAMH,GACNtJ,KAAKuJ,YAAcA,EACnBvJ,KAAKwJ,QAAUA,EACfxJ,KAAK0C,KAAO,kBAGb,MAAMgH,UAAkBxD,EAO3B9F,YAAYiI,GACRoB,QACAzJ,KAAK2J,UAAW,EAChBvB,EAAsBpI,KAAMqI,GAC5BrI,KAAKqI,KAAOA,EACZrI,KAAK4J,MAAQvB,EAAKuB,MAClB5J,KAAK6J,WAAa,GAClB7J,KAAK8J,OAASzB,EAAKyB,OAWvBC,QAAQT,EAAQC,EAAaC,GAEzB,OADAC,MAAMpC,aAAa,QAAS,IAAI+B,EAAeE,EAAQC,EAAaC,IAC7DxJ,KAOXgK,OAKI,MAJI,WAAahK,KAAK6J,YAAc,KAAO7J,KAAK6J,aAC5C7J,KAAK6J,WAAa,UAClB7J,KAAKiK,UAEFjK,KAOXkK,QAKI,MAJI,YAAclK,KAAK6J,YAAc,SAAW7J,KAAK6J,aACjD7J,KAAKmK,UACLnK,KAAKoK,WAEFpK,KAQXqK,KAAK9E,GACG,SAAWvF,KAAK6J,YAChB7J,KAAKsK,MAAM/E,GAWnBgF,SACIvK,KAAK6J,WAAa,OAClB7J,KAAK2J,UAAW,EAChBF,MAAMpC,aAAa,QAQvBmD,OAAO7H,GACH,MAAMgD,EAASjB,EAAa/B,EAAM3C,KAAK8J,OAAOlF,YAC9C5E,KAAKyK,SAAS9E,GAOlB8E,SAAS9E,GACL8D,MAAMpC,aAAa,SAAU1B,GAOjCyE,QAAQM,GACJ1K,KAAK6J,WAAa,SAClBJ,MAAMpC,aAAa,QAASqD,IC/GpC,MAAMC,EAAW,mEAAmEjH,MAAM,IAAK5B,EAAS,GAAI8I,EAAM,GAClH,IAAqBC,EAAjBC,EAAO,EAAGhH,EAAI,EAQX,SAASiH,EAAOC,GACnB,IAAIC,EAAU,GACd,GACIA,EAAUN,EAASK,EAAMlJ,GAAUmJ,EACnCD,EAAMlC,KAAKoC,MAAMF,EAAMlJ,SAClBkJ,EAAM,GACf,OAAOC,EAsBJ,SAASE,IACZ,MAAMC,EAAML,GAAQ,IAAIM,MACxB,OAAID,IAAQP,GACDC,EAAO,EAAGD,EAAOO,GACrBA,EAAM,IAAML,EAAOD,KAK9B,KAAOhH,EAAIhC,EAAQgC,IACf8G,EAAID,EAAS7G,IAAMA,ECzChB,SAASiH,EAAO/H,GACnB,IAAIiG,EAAM,GACV,IAAK,IAAInF,KAAKd,EACNA,EAAI+E,eAAejE,KACfmF,EAAInH,SACJmH,GAAO,KACXA,GAAOqC,mBAAmBxH,GAAK,IAAMwH,mBAAmBtI,EAAIc,KAGpE,OAAOmF,EAQJ,SAASjF,EAAOuH,GACnB,IAAIC,EAAM,GACNC,EAAQF,EAAG7H,MAAM,KACrB,IAAK,IAAII,EAAI,EAAGqF,EAAIsC,EAAM3J,OAAQgC,EAAIqF,EAAGrF,IAAK,CAC1C,IAAI4H,EAAOD,EAAM3H,GAAGJ,MAAM,KAC1B8H,EAAIG,mBAAmBD,EAAK,KAAOC,mBAAmBD,EAAK,IAE/D,OAAOF,EC/BX,IAAII,GAAQ,EACZ,IACIA,EAAkC,qBAAnBC,gBACX,oBAAqB,IAAIA,eAEjC,MAAOC,KAIA,MAAMC,EAAUH,ECPhB,SAASI,EAAI3D,GAChB,MAAM4D,EAAU5D,EAAK4D,QAErB,IACI,GAAI,qBAAuBJ,kBAAoBI,GAAWF,GACtD,OAAO,IAAIF,eAGnB,MAAOK,IACP,IAAKD,EACD,IACI,OAAO,IAAIxD,EAAW,CAAC,UAAU0D,OAAO,UAAUvG,KAAK,OAAM,qBAEjE,MAAOsG,KCRf,SAASE,KACT,MAAMC,EAAW,WACb,MAAMC,EAAM,IAAIT,EAAe,CAC3BI,SAAS,IAEb,OAAO,MAAQK,EAAIC,aAJN,GAMV,MAAMC,UAAgB9C,EAOzBtJ,YAAYiI,GAGR,GAFAoB,MAAMpB,GACNrI,KAAKyM,SAAU,EACS,qBAAbC,SAA0B,CACjC,MAAMC,EAAQ,WAAaD,SAASzG,SACpC,IAAI2G,EAAOF,SAASE,KAEfA,IACDA,EAAOD,EAAQ,MAAQ,MAE3B3M,KAAK6M,GACoB,qBAAbH,UACJrE,EAAKyE,WAAaJ,SAASI,UAC3BF,IAASvE,EAAKuE,KACtB5M,KAAK+M,GAAK1E,EAAK2E,SAAWL,EAK9B,MAAMM,EAAc5E,GAAQA,EAAK4E,YACjCjN,KAAKmD,eAAiBkJ,IAAYY,EAKlCC,WACA,MAAO,UAQXjD,SACIjK,KAAKmN,OAQTC,MAAMC,GACFrN,KAAK6J,WAAa,UAClB,MAAMuD,EAAQ,KACVpN,KAAK6J,WAAa,SAClBwD,KAEJ,GAAIrN,KAAKyM,UAAYzM,KAAK2J,SAAU,CAChC,IAAI2D,EAAQ,EACRtN,KAAKyM,UACLa,IACAtN,KAAKyG,KAAK,gBAAgB,aACpB6G,GAASF,QAGdpN,KAAK2J,WACN2D,IACAtN,KAAKyG,KAAK,SAAS,aACb6G,GAASF,aAKnBA,IAQRD,OACInN,KAAKyM,SAAU,EACfzM,KAAKuN,SACLvN,KAAKqH,aAAa,QAOtBmD,OAAO7H,GACH,MAAMS,EAAWuC,IAMb,GAJI,YAAc3F,KAAK6J,YAA8B,SAAhBlE,EAAOjD,MACxC1C,KAAKuK,SAGL,UAAY5E,EAAOjD,KAEnB,OADA1C,KAAKoK,QAAQ,CAAEb,YAAa,oCACrB,EAGXvJ,KAAKyK,SAAS9E,IAGlBE,EAAclD,EAAM3C,KAAK8J,OAAOlF,YAAYrC,QAAQa,GAEhD,WAAapD,KAAK6J,aAElB7J,KAAKyM,SAAU,EACfzM,KAAKqH,aAAa,gBACd,SAAWrH,KAAK6J,YAChB7J,KAAKmN,QAWjBhD,UACI,MAAMD,EAAQ,KACVlK,KAAKsK,MAAM,CAAC,CAAE5H,KAAM,YAEpB,SAAW1C,KAAK6J,WAChBK,IAKAlK,KAAKyG,KAAK,OAAQyD,GAU1BI,MAAM/E,GACFvF,KAAK2J,UAAW,EAChBrE,EAAcC,GAAS5C,IACnB3C,KAAKwN,QAAQ7K,GAAM,KACf3C,KAAK2J,UAAW,EAChB3J,KAAKqH,aAAa,eAS9BoG,MACI,IAAI7D,EAAQ5J,KAAK4J,OAAS,GAC1B,MAAM8D,EAAS1N,KAAKqI,KAAK2E,OAAS,QAAU,OAC5C,IAAIJ,EAAO,IAEP,IAAU5M,KAAKqI,KAAKsF,oBACpB/D,EAAM5J,KAAKqI,KAAKuF,gBAAkBzC,KAEjCnL,KAAKmD,gBAAmByG,EAAMiE,MAC/BjE,EAAMkE,IAAM,GAGZ9N,KAAKqI,KAAKuE,OACR,UAAYc,GAAqC,MAA3BK,OAAO/N,KAAKqI,KAAKuE,OACpC,SAAWc,GAAqC,KAA3BK,OAAO/N,KAAKqI,KAAKuE,SAC3CA,EAAO,IAAM5M,KAAKqI,KAAKuE,MAE3B,MAAMoB,EAAejD,EAAOnB,GACtBqE,GAA4C,IAArCjO,KAAKqI,KAAKyE,SAASoB,QAAQ,KACxC,OAAQR,EACJ,OACCO,EAAO,IAAMjO,KAAKqI,KAAKyE,SAAW,IAAM9M,KAAKqI,KAAKyE,UACnDF,EACA5M,KAAKqI,KAAK8F,MACTH,EAAalM,OAAS,IAAMkM,EAAe,IAQpDI,QAAQ/F,EAAO,IAEX,OADA3K,OAAO2Q,OAAOhG,EAAM,CAAEwE,GAAI7M,KAAK6M,GAAIE,GAAI/M,KAAK+M,IAAM/M,KAAKqI,MAChD,IAAIiG,EAAQtO,KAAKyN,MAAOpF,GASnCmF,QAAQ7K,EAAM4D,GACV,MAAMgI,EAAMvO,KAAKoO,QAAQ,CACrBI,OAAQ,OACR7L,KAAMA,IAEV4L,EAAInI,GAAG,UAAWG,GAClBgI,EAAInI,GAAG,SAAS,CAACqI,EAAWjF,KACxBxJ,KAAK+J,QAAQ,iBAAkB0E,EAAWjF,MAQlD+D,SACI,MAAMgB,EAAMvO,KAAKoO,UACjBG,EAAInI,GAAG,OAAQpG,KAAKwK,OAAOhC,KAAKxI,OAChCuO,EAAInI,GAAG,SAAS,CAACqI,EAAWjF,KACxBxJ,KAAK+J,QAAQ,iBAAkB0E,EAAWjF,MAE9CxJ,KAAK0O,QAAUH,GAGhB,MAAMD,UAAgBpI,EAOzB9F,YAAYqN,EAAKpF,GACboB,QACArB,EAAsBpI,KAAMqI,GAC5BrI,KAAKqI,KAAOA,EACZrI,KAAKwO,OAASnG,EAAKmG,QAAU,MAC7BxO,KAAKyN,IAAMA,EACXzN,KAAK2O,OAAQ,IAAUtG,EAAKsG,MAC5B3O,KAAK2C,UAAO1C,IAAcoI,EAAK1F,KAAO0F,EAAK1F,KAAO,KAClD3C,KAAKoC,SAOTA,SACI,MAAMiG,EAAOV,EAAK3H,KAAKqI,KAAM,QAAS,MAAO,MAAO,aAAc,OAAQ,KAAM,UAAW,qBAAsB,aACjHA,EAAK4D,UAAYjM,KAAKqI,KAAKwE,GAC3BxE,EAAKuG,UAAY5O,KAAKqI,KAAK0E,GAC3B,MAAMT,EAAOtM,KAAKsM,IAAM,IAAIT,EAAexD,GAC3C,IACIiE,EAAItC,KAAKhK,KAAKwO,OAAQxO,KAAKyN,IAAKzN,KAAK2O,OACrC,IACI,GAAI3O,KAAKqI,KAAKwG,aAAc,CACxBvC,EAAIwC,uBAAyBxC,EAAIwC,uBAAsB,GACvD,IAAK,IAAIhL,KAAK9D,KAAKqI,KAAKwG,aAChB7O,KAAKqI,KAAKwG,aAAa9G,eAAejE,IACtCwI,EAAIyC,iBAAiBjL,EAAG9D,KAAKqI,KAAKwG,aAAa/K,KAK/D,MAAOoI,IACP,GAAI,SAAWlM,KAAKwO,OAChB,IACIlC,EAAIyC,iBAAiB,eAAgB,4BAEzC,MAAO7C,IAEX,IACII,EAAIyC,iBAAiB,SAAU,OAEnC,MAAO7C,IAEH,oBAAqBI,IACrBA,EAAI0C,gBAAkBhP,KAAKqI,KAAK2G,iBAEhChP,KAAKqI,KAAK4G,iBACV3C,EAAI4C,QAAUlP,KAAKqI,KAAK4G,gBAE5B3C,EAAI6C,mBAAqB,KACjB,IAAM7C,EAAIzC,aAEV,MAAQyC,EAAI8C,QAAU,OAAS9C,EAAI8C,OACnCpP,KAAKqP,SAKLrP,KAAKuI,cAAa,KACdvI,KAAK+J,QAA8B,kBAAfuC,EAAI8C,OAAsB9C,EAAI8C,OAAS,KAC5D,KAGX9C,EAAIjC,KAAKrK,KAAK2C,MAElB,MAAOuJ,GAOH,YAHAlM,KAAKuI,cAAa,KACdvI,KAAK+J,QAAQmC,KACd,GAGiB,qBAAboD,WACPtP,KAAKmB,MAAQmN,EAAQiB,gBACrBjB,EAAQkB,SAASxP,KAAKmB,OAASnB,MAQvC+J,QAAQ+B,GACJ9L,KAAKqH,aAAa,QAASyE,EAAK9L,KAAKsM,KACrCtM,KAAKyP,SAAQ,GAOjBA,QAAQC,GACJ,GAAI,qBAAuB1P,KAAKsM,KAAO,OAAStM,KAAKsM,IAArD,CAIA,GADAtM,KAAKsM,IAAI6C,mBAAqB/C,EAC1BsD,EACA,IACI1P,KAAKsM,IAAIqD,QAEb,MAAOzD,IAEa,qBAAboD,iBACAhB,EAAQkB,SAASxP,KAAKmB,OAEjCnB,KAAKsM,IAAM,MAOf+C,SACI,MAAM1M,EAAO3C,KAAKsM,IAAIsD,aACT,OAATjN,IACA3C,KAAKqH,aAAa,OAAQ1E,GAC1B3C,KAAKqH,aAAa,WAClBrH,KAAKyP,WAQbE,QACI3P,KAAKyP,WAUb,GAPAnB,EAAQiB,cAAgB,EACxBjB,EAAQkB,SAAW,GAMK,qBAAbF,SAEP,GAA2B,oBAAhBO,YAEPA,YAAY,WAAYC,SAEvB,GAAgC,oBAArBzJ,iBAAiC,CAC7C,MAAM0J,EAAmB,eAAgBtH,EAAa,WAAa,SACnEpC,iBAAiB0J,EAAkBD,IAAe,GAG1D,SAASA,KACL,IAAK,IAAIhM,KAAKwK,EAAQkB,SACdlB,EAAQkB,SAASzH,eAAejE,IAChCwK,EAAQkB,SAAS1L,GAAG6L,QC9YzB,MAAMK,GAAW,MACpB,MAAMC,EAAwC,oBAAZC,SAAqD,oBAApBA,QAAQC,QAC3E,OAAIF,EACOlJ,GAAMmJ,QAAQC,UAAUC,KAAKrJ,GAG7B,CAACA,EAAIwB,IAAiBA,EAAaxB,EAAI,IAN9B,GASXsJ,GAAY5H,EAAAA,WAAwBA,EAAAA,aACpC6H,IAAwB,EACxBC,GAAoB,cCL3BC,GAAqC,qBAAdC,WACI,kBAAtBA,UAAUC,SACmB,gBAApCD,UAAUC,QAAQC,cACf,MAAMC,WAAWlH,EAOpBtJ,YAAYiI,GACRoB,MAAMpB,GACNrI,KAAKmD,gBAAkBkF,EAAK4E,YAO5BC,WACA,MAAO,YAOXjD,SACI,IAAKjK,KAAK6Q,QAEN,OAEJ,MAAMpD,EAAMzN,KAAKyN,MACXqD,EAAY9Q,KAAKqI,KAAKyI,UAEtBzI,EAAOmI,GACP,GACA7I,EAAK3H,KAAKqI,KAAM,QAAS,oBAAqB,MAAO,MAAO,aAAc,OAAQ,KAAM,UAAW,qBAAsB,eAAgB,kBAAmB,SAAU,aAAc,SAAU,uBAChMrI,KAAKqI,KAAKwG,eACVxG,EAAK0I,QAAU/Q,KAAKqI,KAAKwG,cAE7B,IACI7O,KAAKgR,GACDV,KAA0BE,GACpBM,EACI,IAAIT,GAAU5C,EAAKqD,GACnB,IAAIT,GAAU5C,GAClB,IAAI4C,GAAU5C,EAAKqD,EAAWzI,GAE5C,MAAOyD,IACH,OAAO9L,KAAKqH,aAAa,QAASyE,IAEtC9L,KAAKgR,GAAGpM,WAAa5E,KAAK8J,OAAOlF,YAAc2L,GAC/CvQ,KAAKiR,oBAOTA,oBACIjR,KAAKgR,GAAGE,OAAS,KACTlR,KAAKqI,KAAK8I,WACVnR,KAAKgR,GAAGI,QAAQC,QAEpBrR,KAAKuK,UAETvK,KAAKgR,GAAGM,QAAUC,GAAcvR,KAAKoK,QAAQ,CACzCb,YAAa,8BACbC,QAAS+H,IAEbvR,KAAKgR,GAAGQ,UAAYC,GAAMzR,KAAKwK,OAAOiH,EAAG9O,MACzC3C,KAAKgR,GAAGU,QAAUxF,GAAKlM,KAAK+J,QAAQ,kBAAmBmC,GAQ3D5B,MAAM/E,GACFvF,KAAK2J,UAAW,EAGhB,IAAK,IAAI7F,EAAI,EAAGA,EAAIyB,EAAQzD,OAAQgC,IAAK,CACrC,MAAM6B,EAASJ,EAAQzB,GACjB6N,EAAa7N,IAAMyB,EAAQzD,OAAS,EAC1CoB,EAAayC,EAAQ3F,KAAKmD,gBAAgBR,IAEtC,MAAM0F,EAAO,GACb,IAAKiI,KACG3K,EAAOnG,UACP6I,EAAKuJ,SAAWjM,EAAOnG,QAAQoS,UAE/B5R,KAAKqI,KAAKwJ,mBAAmB,CAC7B,MAAMzQ,EAEN,kBAAoBuB,EAAOmP,OAAOlJ,WAAWjG,GAAQA,EAAKb,OACtDV,EAAMpB,KAAKqI,KAAKwJ,kBAAkBE,YAClC1J,EAAKuJ,UAAW,GAO5B,IACQtB,GAEAtQ,KAAKgR,GAAG3G,KAAK1H,GAGb3C,KAAKgR,GAAG3G,KAAK1H,EAAM0F,GAG3B,MAAO6D,IAEHyF,GAGA3B,IAAS,KACLhQ,KAAK2J,UAAW,EAChB3J,KAAKqH,aAAa,WACnBrH,KAAKuI,kBAUxB4B,UAC2B,qBAAZnK,KAAKgR,KACZhR,KAAKgR,GAAG9G,QACRlK,KAAKgR,GAAK,MAQlBvD,MACI,IAAI7D,EAAQ5J,KAAK4J,OAAS,GAC1B,MAAM8D,EAAS1N,KAAKqI,KAAK2E,OAAS,MAAQ,KAC1C,IAAIJ,EAAO,GAEP5M,KAAKqI,KAAKuE,OACR,QAAUc,GAAqC,MAA3BK,OAAO/N,KAAKqI,KAAKuE,OAClC,OAASc,GAAqC,KAA3BK,OAAO/N,KAAKqI,KAAKuE,SACzCA,EAAO,IAAM5M,KAAKqI,KAAKuE,MAGvB5M,KAAKqI,KAAKsF,oBACV/D,EAAM5J,KAAKqI,KAAKuF,gBAAkBzC,KAGjCnL,KAAKmD,iBACNyG,EAAMkE,IAAM,GAEhB,MAAME,EAAejD,EAAOnB,GACtBqE,GAA4C,IAArCjO,KAAKqI,KAAKyE,SAASoB,QAAQ,KACxC,OAAQR,EACJ,OACCO,EAAO,IAAMjO,KAAKqI,KAAKyE,SAAW,IAAM9M,KAAKqI,KAAKyE,UACnDF,EACA5M,KAAKqI,KAAK8F,MACTH,EAAalM,OAAS,IAAMkM,EAAe,IAQpD6C,QACI,QAASR,ICvLV,MAAM2B,GAAa,CACtBC,UAAWrB,GACXnE,QAASD,GCGP0F,GAAK,0OACLC,GAAQ,CACV,SAAU,WAAY,YAAa,WAAY,OAAQ,WAAY,OAAQ,OAAQ,WAAY,OAAQ,YAAa,OAAQ,QAAS,UAElI,SAASC,GAAMnJ,GAClB,MAAM/G,EAAM+G,EAAKoJ,EAAIpJ,EAAIiF,QAAQ,KAAMhC,EAAIjD,EAAIiF,QAAQ,MAC7C,GAANmE,IAAiB,GAANnG,IACXjD,EAAMA,EAAIjE,UAAU,EAAGqN,GAAKpJ,EAAIjE,UAAUqN,EAAGnG,GAAGoG,QAAQ,KAAM,KAAOrJ,EAAIjE,UAAUkH,EAAGjD,EAAInH,SAE9F,IAAIyQ,EAAIL,GAAGM,KAAKvJ,GAAO,IAAKwE,EAAM,GAAI3J,EAAI,GAC1C,MAAOA,IACH2J,EAAI0E,GAAMrO,IAAMyO,EAAEzO,IAAM,GAU5B,OARU,GAANuO,IAAiB,GAANnG,IACXuB,EAAIgF,OAASvQ,EACbuL,EAAIiF,KAAOjF,EAAIiF,KAAK1N,UAAU,EAAGyI,EAAIiF,KAAK5Q,OAAS,GAAGwQ,QAAQ,KAAM,KACpE7E,EAAIkF,UAAYlF,EAAIkF,UAAUL,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,KAAM,KAC9E7E,EAAImF,SAAU,GAElBnF,EAAIoF,UAAYA,GAAUpF,EAAKA,EAAI,SACnCA,EAAIqF,SAAWA,GAASrF,EAAKA,EAAI,UAC1BA,EAEX,SAASoF,GAAU7P,EAAKmL,GACpB,MAAM4E,EAAO,WAAYC,EAAQ7E,EAAKmE,QAAQS,EAAM,KAAKrP,MAAM,KAO/D,MANyB,KAArByK,EAAK8E,OAAO,EAAG,IAA6B,IAAhB9E,EAAKrM,QACjCkR,EAAM/L,OAAO,EAAG,GAEmB,KAAnCkH,EAAK8E,OAAO9E,EAAKrM,OAAS,EAAG,IAC7BkR,EAAM/L,OAAO+L,EAAMlR,OAAS,EAAG,GAE5BkR,EAEX,SAASF,GAASrF,EAAK7D,GACnB,MAAMjH,EAAO,GAMb,OALAiH,EAAM0I,QAAQ,6BAA6B,SAAUY,EAAIC,EAAIC,GACrDD,IACAxQ,EAAKwQ,GAAMC,MAGZzQ,ECzCJ,MAAM0Q,WAAenN,EAQxB9F,YAAYqN,EAAKpF,EAAO,IACpBoB,QACIgE,GAAO,kBAAoBA,IAC3BpF,EAAOoF,EACPA,EAAM,MAENA,GACAA,EAAM2E,GAAM3E,GACZpF,EAAKyE,SAAWW,EAAIiF,KACpBrK,EAAK2E,OAA0B,UAAjBS,EAAIxH,UAAyC,QAAjBwH,EAAIxH,SAC9CoC,EAAKuE,KAAOa,EAAIb,KACZa,EAAI7D,QACJvB,EAAKuB,MAAQ6D,EAAI7D,QAEhBvB,EAAKqK,OACVrK,EAAKyE,SAAWsF,GAAM/J,EAAKqK,MAAMA,MAErCtK,EAAsBpI,KAAMqI,GAC5BrI,KAAKgN,OACD,MAAQ3E,EAAK2E,OACP3E,EAAK2E,OACe,qBAAbN,UAA4B,WAAaA,SAASzG,SAC/DoC,EAAKyE,WAAazE,EAAKuE,OAEvBvE,EAAKuE,KAAO5M,KAAKgN,OAAS,MAAQ,MAEtChN,KAAK8M,SACDzE,EAAKyE,WACoB,qBAAbJ,SAA2BA,SAASI,SAAW,aAC/D9M,KAAK4M,KACDvE,EAAKuE,OACoB,qBAAbF,UAA4BA,SAASE,KACvCF,SAASE,KACT5M,KAAKgN,OACD,MACA,MAClBhN,KAAKgS,WAAa3J,EAAK2J,YAAc,CAAC,UAAW,aACjDhS,KAAK6J,WAAa,GAClB7J,KAAKsT,YAAc,GACnBtT,KAAKuT,cAAgB,EACrBvT,KAAKqI,KAAO3K,OAAO2Q,OAAO,CACtBF,KAAM,aACNqF,OAAO,EACPxE,iBAAiB,EACjByE,SAAS,EACT7F,eAAgB,IAChB8F,iBAAiB,EACjBC,oBAAoB,EACpB9B,kBAAmB,CACfE,UAAW,MAEf6B,iBAAkB,GAClBC,qBAAqB,GACtBxL,GACHrI,KAAKqI,KAAK8F,KAAOnO,KAAKqI,KAAK8F,KAAKmE,QAAQ,MAAO,IAAM,IACtB,kBAApBtS,KAAKqI,KAAKuB,QACjB5J,KAAKqI,KAAKuB,MAAQ5F,EAAOhE,KAAKqI,KAAKuB,QAGvC5J,KAAK8T,GAAK,KACV9T,KAAK+T,SAAW,KAChB/T,KAAKgU,aAAe,KACpBhU,KAAKiU,YAAc,KAEnBjU,KAAKkU,iBAAmB,KACQ,oBAArB7N,mBACHrG,KAAKqI,KAAKwL,qBAIVxN,iBAAiB,gBAAgB,KACzBrG,KAAKmU,YAELnU,KAAKmU,UAAUtN,qBACf7G,KAAKmU,UAAUjK,YAEpB,GAEe,cAAlBlK,KAAK8M,WACL9M,KAAKoU,qBAAuB,KACxBpU,KAAKoK,QAAQ,kBAAmB,CAC5Bb,YAAa,6BAGrBlD,iBAAiB,UAAWrG,KAAKoU,sBAAsB,KAG/DpU,KAAKgK,OASTqK,gBAAgBnH,GACZ,MAAMtD,EAAQlM,OAAO2Q,OAAO,GAAIrO,KAAKqI,KAAKuB,OAE1CA,EAAM0K,IAAMrO,EAEZ2D,EAAMuK,UAAYjH,EAEdlN,KAAK8T,KACLlK,EAAMiE,IAAM7N,KAAK8T,IACrB,MAAMzL,EAAO3K,OAAO2Q,OAAO,GAAIrO,KAAKqI,KAAKuL,iBAAiB1G,GAAOlN,KAAKqI,KAAM,CACxEuB,MAAAA,EACAE,OAAQ9J,KACR8M,SAAU9M,KAAK8M,SACfE,OAAQhN,KAAKgN,OACbJ,KAAM5M,KAAK4M,OAEf,OAAO,IAAIoF,GAAW9E,GAAM7E,GAOhC2B,OACI,IAAImK,EACJ,GAAInU,KAAKqI,KAAKqL,iBACVL,GAAOkB,wBACmC,IAA1CvU,KAAKgS,WAAW9D,QAAQ,aACxBiG,EAAY,gBAEX,IAAI,IAAMnU,KAAKgS,WAAWlQ,OAK3B,YAHA9B,KAAKuI,cAAa,KACdvI,KAAKqH,aAAa,QAAS,6BAC5B,GAIH8M,EAAYnU,KAAKgS,WAAW,GAEhChS,KAAK6J,WAAa,UAElB,IACIsK,EAAYnU,KAAKqU,gBAAgBF,GAErC,MAAOjI,GAGH,OAFAlM,KAAKgS,WAAWwC,aAChBxU,KAAKgK,OAGTmK,EAAUnK,OACVhK,KAAKyU,aAAaN,GAOtBM,aAAaN,GACLnU,KAAKmU,WACLnU,KAAKmU,UAAUtN,qBAGnB7G,KAAKmU,UAAYA,EAEjBA,EACK/N,GAAG,QAASpG,KAAK0U,QAAQlM,KAAKxI,OAC9BoG,GAAG,SAAUpG,KAAKyK,SAASjC,KAAKxI,OAChCoG,GAAG,QAASpG,KAAK+J,QAAQvB,KAAKxI,OAC9BoG,GAAG,SAASkD,GAAUtJ,KAAKoK,QAAQ,kBAAmBd,KAQ/DqL,MAAMzH,GACF,IAAIiH,EAAYnU,KAAKqU,gBAAgBnH,GACjC0H,GAAS,EACbvB,GAAOkB,uBAAwB,EAC/B,MAAMM,EAAkB,KAChBD,IAEJT,EAAU9J,KAAK,CAAC,CAAE3H,KAAM,OAAQC,KAAM,WACtCwR,EAAU1N,KAAK,UAAUqO,IACrB,IAAIF,EAEJ,GAAI,SAAWE,EAAIpS,MAAQ,UAAYoS,EAAInS,KAAM,CAG7C,GAFA3C,KAAK+U,WAAY,EACjB/U,KAAKqH,aAAa,YAAa8M,IAC1BA,EACD,OACJd,GAAOkB,sBAAwB,cAAgBJ,EAAUjH,KACzDlN,KAAKmU,UAAU/G,OAAM,KACbwH,GAEA,WAAa5U,KAAK6J,aAEtB4F,IACAzP,KAAKyU,aAAaN,GAClBA,EAAU9J,KAAK,CAAC,CAAE3H,KAAM,aACxB1C,KAAKqH,aAAa,UAAW8M,GAC7BA,EAAY,KACZnU,KAAK+U,WAAY,EACjB/U,KAAKgV,gBAGR,CACD,MAAMlJ,EAAM,IAAIzC,MAAM,eAEtByC,EAAIqI,UAAYA,EAAUjH,KAC1BlN,KAAKqH,aAAa,eAAgByE,SAI9C,SAASmJ,IACDL,IAGJA,GAAS,EACTnF,IACA0E,EAAUjK,QACViK,EAAY,MAGhB,MAAMzC,EAAU5F,IACZ,MAAMnM,EAAQ,IAAI0J,MAAM,gBAAkByC,GAE1CnM,EAAMwU,UAAYA,EAAUjH,KAC5B+H,IACAjV,KAAKqH,aAAa,eAAgB1H,IAEtC,SAASuV,IACLxD,EAAQ,oBAGZ,SAASJ,IACLI,EAAQ,iBAGZ,SAASyD,EAAUC,GACXjB,GAAaiB,EAAGlI,OAASiH,EAAUjH,MACnC+H,IAIR,MAAMxF,EAAU,KACZ0E,EAAUvN,eAAe,OAAQiO,GACjCV,EAAUvN,eAAe,QAAS8K,GAClCyC,EAAUvN,eAAe,QAASsO,GAClClV,KAAK0G,IAAI,QAAS4K,GAClBtR,KAAK0G,IAAI,YAAayO,IAE1BhB,EAAU1N,KAAK,OAAQoO,GACvBV,EAAU1N,KAAK,QAASiL,GACxByC,EAAU1N,KAAK,QAASyO,GACxBlV,KAAKyG,KAAK,QAAS6K,GACnBtR,KAAKyG,KAAK,YAAa0O,GACvBhB,EAAUnK,OAOdO,SAOI,GANAvK,KAAK6J,WAAa,OAClBwJ,GAAOkB,sBAAwB,cAAgBvU,KAAKmU,UAAUjH,KAC9DlN,KAAKqH,aAAa,QAClBrH,KAAKgV,QAGD,SAAWhV,KAAK6J,YAChB7J,KAAKqI,KAAKoL,SACVzT,KAAKmU,UAAU/G,MAAO,CACtB,IAAItJ,EAAI,EACR,MAAMqF,EAAInJ,KAAK+T,SAASjS,OACxB,KAAOgC,EAAIqF,EAAGrF,IACV9D,KAAK2U,MAAM3U,KAAK+T,SAASjQ,KASrC2G,SAAS9E,GACL,GAAI,YAAc3F,KAAK6J,YACnB,SAAW7J,KAAK6J,YAChB,YAAc7J,KAAK6J,WAInB,OAHA7J,KAAKqH,aAAa,SAAU1B,GAE5B3F,KAAKqH,aAAa,aACV1B,EAAOjD,MACX,IAAK,OACD1C,KAAKqV,YAAYC,KAAKlD,MAAMzM,EAAOhD,OACnC,MACJ,IAAK,OACD3C,KAAKuV,mBACLvV,KAAKwV,WAAW,QAChBxV,KAAKqH,aAAa,QAClBrH,KAAKqH,aAAa,QAClB,MACJ,IAAK,QACD,MAAMyE,EAAM,IAAIzC,MAAM,gBAEtByC,EAAI2J,KAAO9P,EAAOhD,KAClB3C,KAAK+J,QAAQ+B,GACb,MACJ,IAAK,UACD9L,KAAKqH,aAAa,OAAQ1B,EAAOhD,MACjC3C,KAAKqH,aAAa,UAAW1B,EAAOhD,MACpC,OAYhB0S,YAAY1S,GACR3C,KAAKqH,aAAa,YAAa1E,GAC/B3C,KAAK8T,GAAKnR,EAAKkL,IACf7N,KAAKmU,UAAUvK,MAAMiE,IAAMlL,EAAKkL,IAChC7N,KAAK+T,SAAW/T,KAAK0V,eAAe/S,EAAKoR,UACzC/T,KAAKgU,aAAerR,EAAKqR,aACzBhU,KAAKiU,YAActR,EAAKsR,YACxBjU,KAAK2V,WAAahT,EAAKgT,WACvB3V,KAAKuK,SAED,WAAavK,KAAK6J,YAEtB7J,KAAKuV,mBAOTA,mBACIvV,KAAK0I,eAAe1I,KAAKkU,kBACzBlU,KAAKkU,iBAAmBlU,KAAKuI,cAAa,KACtCvI,KAAKoK,QAAQ,kBACdpK,KAAKgU,aAAehU,KAAKiU,aACxBjU,KAAKqI,KAAK8I,WACVnR,KAAKkU,iBAAiB7C,QAQ9BqD,UACI1U,KAAKsT,YAAYrM,OAAO,EAAGjH,KAAKuT,eAIhCvT,KAAKuT,cAAgB,EACjB,IAAMvT,KAAKsT,YAAYxR,OACvB9B,KAAKqH,aAAa,SAGlBrH,KAAKgV,QAQbA,QACI,GAAI,WAAahV,KAAK6J,YAClB7J,KAAKmU,UAAUxK,WACd3J,KAAK+U,WACN/U,KAAKsT,YAAYxR,OAAQ,CACzB,MAAMyD,EAAUvF,KAAK4V,qBACrB5V,KAAKmU,UAAU9J,KAAK9E,GAGpBvF,KAAKuT,cAAgBhO,EAAQzD,OAC7B9B,KAAKqH,aAAa,UAS1BuO,qBACI,MAAMC,EAAyB7V,KAAK2V,YACR,YAAxB3V,KAAKmU,UAAUjH,MACflN,KAAKsT,YAAYxR,OAAS,EAC9B,IAAK+T,EACD,OAAO7V,KAAKsT,YAEhB,IAAIwC,EAAc,EAClB,IAAK,IAAIhS,EAAI,EAAGA,EAAI9D,KAAKsT,YAAYxR,OAAQgC,IAAK,CAC9C,MAAMnB,EAAO3C,KAAKsT,YAAYxP,GAAGnB,KAIjC,GAHIA,IACAmT,GAAelN,EAAWjG,IAE1BmB,EAAI,GAAKgS,EAAc9V,KAAK2V,WAC5B,OAAO3V,KAAKsT,YAAYlM,MAAM,EAAGtD,GAErCgS,GAAe,EAEnB,OAAO9V,KAAKsT,YAWhBhJ,MAAMwK,EAAKtV,EAAS+G,GAEhB,OADAvG,KAAKwV,WAAW,UAAWV,EAAKtV,EAAS+G,GAClCvG,KAEXqK,KAAKyK,EAAKtV,EAAS+G,GAEf,OADAvG,KAAKwV,WAAW,UAAWV,EAAKtV,EAAS+G,GAClCvG,KAWXwV,WAAW9S,EAAMC,EAAMnD,EAAS+G,GAS5B,GARI,oBAAsB5D,IACtB4D,EAAK5D,EACLA,OAAO1C,GAEP,oBAAsBT,IACtB+G,EAAK/G,EACLA,EAAU,MAEV,YAAcQ,KAAK6J,YAAc,WAAa7J,KAAK6J,WACnD,OAEJrK,EAAUA,GAAW,GACrBA,EAAQoS,UAAW,IAAUpS,EAAQoS,SACrC,MAAMjM,EAAS,CACXjD,KAAMA,EACNC,KAAMA,EACNnD,QAASA,GAEbQ,KAAKqH,aAAa,eAAgB1B,GAClC3F,KAAKsT,YAAYtN,KAAKL,GAClBY,GACAvG,KAAKyG,KAAK,QAASF,GACvBvG,KAAKgV,QAOT9K,QACI,MAAMA,EAAQ,KACVlK,KAAKoK,QAAQ,gBACbpK,KAAKmU,UAAUjK,SAEb6L,EAAkB,KACpB/V,KAAK0G,IAAI,UAAWqP,GACpB/V,KAAK0G,IAAI,eAAgBqP,GACzB7L,KAEE8L,EAAiB,KAEnBhW,KAAKyG,KAAK,UAAWsP,GACrB/V,KAAKyG,KAAK,eAAgBsP,IAqB9B,MAnBI,YAAc/V,KAAK6J,YAAc,SAAW7J,KAAK6J,aACjD7J,KAAK6J,WAAa,UACd7J,KAAKsT,YAAYxR,OACjB9B,KAAKyG,KAAK,SAAS,KACXzG,KAAK+U,UACLiB,IAGA9L,OAIHlK,KAAK+U,UACViB,IAGA9L,KAGDlK,KAOX+J,QAAQ+B,GACJuH,GAAOkB,uBAAwB,EAC/BvU,KAAKqH,aAAa,QAASyE,GAC3B9L,KAAKoK,QAAQ,kBAAmB0B,GAOpC1B,QAAQd,EAAQC,GACR,YAAcvJ,KAAK6J,YACnB,SAAW7J,KAAK6J,YAChB,YAAc7J,KAAK6J,aAEnB7J,KAAK0I,eAAe1I,KAAKkU,kBAEzBlU,KAAKmU,UAAUtN,mBAAmB,SAElC7G,KAAKmU,UAAUjK,QAEflK,KAAKmU,UAAUtN,qBACoB,oBAAxBC,qBACPA,oBAAoB,UAAW9G,KAAKoU,sBAAsB,GAG9DpU,KAAK6J,WAAa,SAElB7J,KAAK8T,GAAK,KAEV9T,KAAKqH,aAAa,QAASiC,EAAQC,GAGnCvJ,KAAKsT,YAAc,GACnBtT,KAAKuT,cAAgB,GAU7BmC,eAAe3B,GACX,MAAMkC,EAAmB,GACzB,IAAInS,EAAI,EACR,MAAMoS,EAAInC,EAASjS,OACnB,KAAOgC,EAAIoS,EAAGpS,KACL9D,KAAKgS,WAAW9D,QAAQ6F,EAASjQ,KAClCmS,EAAiBjQ,KAAK+N,EAASjQ,IAEvC,OAAOmS,GAGf5C,GAAOpN,SAAWA,EChkBMoN,GAAOpN,SCQxB,SAASkQ,GAAI1I,EAAKU,EAAO,GAAIiI,GAChC,IAAIpT,EAAMyK,EAEV2I,EAAMA,GAA4B,qBAAb1J,UAA4BA,SAC7C,MAAQe,IACRA,EAAM2I,EAAInQ,SAAW,KAAOmQ,EAAI1D,MAEjB,kBAARjF,IACH,MAAQA,EAAI3I,OAAO,KAEf2I,EADA,MAAQA,EAAI3I,OAAO,GACbsR,EAAInQ,SAAWwH,EAGf2I,EAAI1D,KAAOjF,GAGpB,sBAAsB4I,KAAK5I,KAExBA,EADA,qBAAuB2I,EACjBA,EAAInQ,SAAW,KAAOwH,EAGtB,WAAaA,GAI3BzK,EAAMoP,GAAM3E,IAGXzK,EAAI4J,OACD,cAAcyJ,KAAKrT,EAAIiD,UACvBjD,EAAI4J,KAAO,KAEN,eAAeyJ,KAAKrT,EAAIiD,YAC7BjD,EAAI4J,KAAO,QAGnB5J,EAAImL,KAAOnL,EAAImL,MAAQ,IACvB,MAAMF,GAAkC,IAA3BjL,EAAI0P,KAAKxE,QAAQ,KACxBwE,EAAOzE,EAAO,IAAMjL,EAAI0P,KAAO,IAAM1P,EAAI0P,KAS/C,OAPA1P,EAAI8Q,GAAK9Q,EAAIiD,SAAW,MAAQyM,EAAO,IAAM1P,EAAI4J,KAAOuB,EAExDnL,EAAIsT,KACAtT,EAAIiD,SACA,MACAyM,GACC0D,GAAOA,EAAIxJ,OAAS5J,EAAI4J,KAAO,GAAK,IAAM5J,EAAI4J,MAChD5J,ECzDX,MAAMD,GAA+C,oBAAhBlH,YAC/BgD,GAAUmE,GACyB,oBAAvBnH,YAAYgD,OACpBhD,YAAYgD,OAAOmE,GACnBA,EAAIC,kBAAkBpH,YAE1BiH,GAAWpF,OAAON,UAAU0F,SAC5BF,GAAiC,oBAATC,MACT,qBAATA,MACoB,6BAAxBC,GAASvB,KAAKsB,MAChB0T,GAAiC,oBAATC,MACT,qBAATA,MACoB,6BAAxB1T,GAASvB,KAAKiV,MAMf,SAASC,GAASzT,GACrB,OAASD,KAA0BC,aAAenH,aAAegD,GAAOmE,KACnEJ,IAAkBI,aAAeH,MACjC0T,IAAkBvT,aAAewT,KAEnC,SAASE,GAAU1T,EAAK2T,GAC3B,IAAK3T,GAAsB,kBAARA,EACf,OAAO,EAEX,GAAIyC,MAAMmR,QAAQ5T,GAAM,CACpB,IAAK,IAAIc,EAAI,EAAGqF,EAAInG,EAAIlB,OAAQgC,EAAIqF,EAAGrF,IACnC,GAAI4S,GAAU1T,EAAIc,IACd,OAAO,EAGf,OAAO,EAEX,GAAI2S,GAASzT,GACT,OAAO,EAEX,GAAIA,EAAI2T,QACkB,oBAAf3T,EAAI2T,QACU,IAArB1U,UAAUH,OACV,OAAO4U,GAAU1T,EAAI2T,UAAU,GAEnC,IAAK,MAAMnU,KAAOQ,EACd,GAAItF,OAAON,UAAU2K,eAAexG,KAAKyB,EAAKR,IAAQkU,GAAU1T,EAAIR,IAChE,OAAO,EAGf,OAAO,ECxCJ,SAASqU,GAAkBlR,GAC9B,MAAMmR,EAAU,GACVC,EAAapR,EAAOhD,KACpBqU,EAAOrR,EAGb,OAFAqR,EAAKrU,KAAOsU,GAAmBF,EAAYD,GAC3CE,EAAKE,YAAcJ,EAAQhV,OACpB,CAAE6D,OAAQqR,EAAMF,QAASA,GAEpC,SAASG,GAAmBtU,EAAMmU,GAC9B,IAAKnU,EACD,OAAOA,EACX,GAAI8T,GAAS9T,GAAO,CAChB,MAAMwU,EAAc,CAAEC,cAAc,EAAMpM,IAAK8L,EAAQhV,QAEvD,OADAgV,EAAQ9Q,KAAKrD,GACNwU,EAEN,GAAI1R,MAAMmR,QAAQjU,GAAO,CAC1B,MAAM0U,EAAU,IAAI5R,MAAM9C,EAAKb,QAC/B,IAAK,IAAIgC,EAAI,EAAGA,EAAInB,EAAKb,OAAQgC,IAC7BuT,EAAQvT,GAAKmT,GAAmBtU,EAAKmB,GAAIgT,GAE7C,OAAOO,EAEN,GAAoB,kBAAT1U,KAAuBA,aAAgB0I,MAAO,CAC1D,MAAMgM,EAAU,GAChB,IAAK,MAAM7U,KAAOG,EACVjF,OAAON,UAAU2K,eAAexG,KAAKoB,EAAMH,KAC3C6U,EAAQ7U,GAAOyU,GAAmBtU,EAAKH,GAAMsU,IAGrD,OAAOO,EAEX,OAAO1U,EAUJ,SAAS2U,GAAkB3R,EAAQmR,GAGtC,OAFAnR,EAAOhD,KAAO4U,GAAmB5R,EAAOhD,KAAMmU,GAC9CnR,EAAOuR,iBAAcjX,EACd0F,EAEX,SAAS4R,GAAmB5U,EAAMmU,GAC9B,IAAKnU,EACD,OAAOA,EACX,GAAIA,GAAQA,EAAKyU,aACb,OAAON,EAAQnU,EAAKqI,KAEnB,GAAIvF,MAAMmR,QAAQjU,GACnB,IAAK,IAAImB,EAAI,EAAGA,EAAInB,EAAKb,OAAQgC,IAC7BnB,EAAKmB,GAAKyT,GAAmB5U,EAAKmB,GAAIgT,QAGzC,GAAoB,kBAATnU,EACZ,IAAK,MAAMH,KAAOG,EACVjF,OAAON,UAAU2K,eAAexG,KAAKoB,EAAMH,KAC3CG,EAAKH,GAAO+U,GAAmB5U,EAAKH,GAAMsU,IAItD,OAAOnU,ECjEJ,MAAMsD,GAAW,EACjB,IAAIuR,IACX,SAAWA,GACPA,EAAWA,EAAW,WAAa,GAAK,UACxCA,EAAWA,EAAW,cAAgB,GAAK,aAC3CA,EAAWA,EAAW,SAAW,GAAK,QACtCA,EAAWA,EAAW,OAAS,GAAK,MACpCA,EAAWA,EAAW,iBAAmB,GAAK,gBAC9CA,EAAWA,EAAW,gBAAkB,GAAK,eAC7CA,EAAWA,EAAW,cAAgB,GAAK,cAP/C,CAQGA,KAAeA,GAAa,KAIxB,MAAMC,GAMTrX,YAAYsX,GACR1X,KAAK0X,SAAWA,EAQpB3M,OAAO/H,GACH,OAAIA,EAAIN,OAAS8U,GAAWG,OAAS3U,EAAIN,OAAS8U,GAAWI,MACrDlB,GAAU1T,GAQX,CAAChD,KAAK6X,eAAe7U,KAPpBA,EAAIN,KACAM,EAAIN,OAAS8U,GAAWG,MAClBH,GAAWM,aACXN,GAAWO,WACd/X,KAAKgY,eAAehV,IAQvC6U,eAAe7U,GAEX,IAAIiG,EAAM,GAAKjG,EAAIN,KAmBnB,OAjBIM,EAAIN,OAAS8U,GAAWM,cACxB9U,EAAIN,OAAS8U,GAAWO,aACxB9O,GAAOjG,EAAIkU,YAAc,KAIzBlU,EAAIiV,KAAO,MAAQjV,EAAIiV,MACvBhP,GAAOjG,EAAIiV,IAAM,KAGjB,MAAQjV,EAAI8Q,KACZ7K,GAAOjG,EAAI8Q,IAGX,MAAQ9Q,EAAIL,OACZsG,GAAOqM,KAAK4C,UAAUlV,EAAIL,KAAM3C,KAAK0X,WAElCzO,EAOX+O,eAAehV,GACX,MAAMmV,EAAiBtB,GAAkB7T,GACnCgU,EAAOhX,KAAK6X,eAAeM,EAAexS,QAC1CmR,EAAUqB,EAAerB,QAE/B,OADAA,EAAQsB,QAAQpB,GACTF,GAQR,MAAMuB,WAAgBnS,EAMzB9F,YAAYkY,GACR7O,QACAzJ,KAAKsY,QAAUA,EAOnBC,IAAIvV,GACA,IAAI2C,EACJ,GAAmB,kBAAR3C,EACP2C,EAAS3F,KAAKwY,aAAaxV,GACvB2C,EAAOjD,OAAS8U,GAAWM,cAC3BnS,EAAOjD,OAAS8U,GAAWO,YAE3B/X,KAAKyY,cAAgB,IAAIC,GAAoB/S,GAElB,IAAvBA,EAAOuR,aACPzN,MAAMpC,aAAa,UAAW1B,IAKlC8D,MAAMpC,aAAa,UAAW1B,OAGjC,KAAI8Q,GAASzT,KAAQA,EAAIiB,OAe1B,MAAM,IAAIoF,MAAM,iBAAmBrG,GAbnC,IAAKhD,KAAKyY,cACN,MAAM,IAAIpP,MAAM,oDAGhB1D,EAAS3F,KAAKyY,cAAcE,eAAe3V,GACvC2C,IAEA3F,KAAKyY,cAAgB,KACrBhP,MAAMpC,aAAa,UAAW1B,KAc9C6S,aAAavP,GACT,IAAInF,EAAI,EAER,MAAMS,EAAI,CACN7B,KAAMqL,OAAO9E,EAAInE,OAAO,KAE5B,QAA2B7E,IAAvBuX,GAAWjT,EAAE7B,MACb,MAAM,IAAI2G,MAAM,uBAAyB9E,EAAE7B,MAG/C,GAAI6B,EAAE7B,OAAS8U,GAAWM,cACtBvT,EAAE7B,OAAS8U,GAAWO,WAAY,CAClC,MAAMa,EAAQ9U,EAAI,EAClB,MAA2B,MAApBmF,EAAInE,SAAShB,IAAcA,GAAKmF,EAAInH,QAC3C,MAAM+W,EAAM5P,EAAIjE,UAAU4T,EAAO9U,GACjC,GAAI+U,GAAO9K,OAAO8K,IAA0B,MAAlB5P,EAAInE,OAAOhB,GACjC,MAAM,IAAIuF,MAAM,uBAEpB9E,EAAE2S,YAAcnJ,OAAO8K,GAG3B,GAAI,MAAQ5P,EAAInE,OAAOhB,EAAI,GAAI,CAC3B,MAAM8U,EAAQ9U,EAAI,EAClB,QAASA,EAAG,CACR,MAAMoF,EAAID,EAAInE,OAAOhB,GACrB,GAAI,MAAQoF,EACR,MACJ,GAAIpF,IAAMmF,EAAInH,OACV,MAERyC,EAAE0T,IAAMhP,EAAIjE,UAAU4T,EAAO9U,QAG7BS,EAAE0T,IAAM,IAGZ,MAAMa,EAAO7P,EAAInE,OAAOhB,EAAI,GAC5B,GAAI,KAAOgV,GAAQ/K,OAAO+K,IAASA,EAAM,CACrC,MAAMF,EAAQ9U,EAAI,EAClB,QAASA,EAAG,CACR,MAAMoF,EAAID,EAAInE,OAAOhB,GACrB,GAAI,MAAQoF,GAAK6E,OAAO7E,IAAMA,EAAG,GAC3BpF,EACF,MAEJ,GAAIA,IAAMmF,EAAInH,OACV,MAERyC,EAAEuP,GAAK/F,OAAO9E,EAAIjE,UAAU4T,EAAO9U,EAAI,IAG3C,GAAImF,EAAInE,SAAShB,GAAI,CACjB,MAAMiV,EAAU/Y,KAAKgZ,SAAS/P,EAAIgK,OAAOnP,IACzC,IAAIuU,GAAQY,eAAe1U,EAAE7B,KAAMqW,GAI/B,MAAM,IAAI1P,MAAM,mBAHhB9E,EAAE5B,KAAOoW,EAMjB,OAAOxU,EAEXyU,SAAS/P,GACL,IACI,OAAOqM,KAAKlD,MAAMnJ,EAAKjJ,KAAKsY,SAEhC,MAAOpM,GACH,OAAO,GAGM,sBAACxJ,EAAMqW,GACxB,OAAQrW,GACJ,KAAK8U,GAAW0B,QACZ,MAA0B,kBAAZH,EAClB,KAAKvB,GAAW2B,WACZ,YAAmBlZ,IAAZ8Y,EACX,KAAKvB,GAAW4B,cACZ,MAA0B,kBAAZL,GAA2C,kBAAZA,EACjD,KAAKvB,GAAWG,MAChB,KAAKH,GAAWM,aACZ,OAAOrS,MAAMmR,QAAQmC,IAAYA,EAAQjX,OAAS,EACtD,KAAK0V,GAAWI,IAChB,KAAKJ,GAAWO,WACZ,OAAOtS,MAAMmR,QAAQmC,IAMjCM,UACQrZ,KAAKyY,eACLzY,KAAKyY,cAAca,0BAY/B,MAAMZ,GACFtY,YAAYuF,GACR3F,KAAK2F,OAASA,EACd3F,KAAK8W,QAAU,GACf9W,KAAKuZ,UAAY5T,EAUrBgT,eAAea,GAEX,GADAxZ,KAAK8W,QAAQ9Q,KAAKwT,GACdxZ,KAAK8W,QAAQhV,SAAW9B,KAAKuZ,UAAUrC,YAAa,CAEpD,MAAMvR,EAAS2R,GAAkBtX,KAAKuZ,UAAWvZ,KAAK8W,SAEtD,OADA9W,KAAKsZ,yBACE3T,EAEX,OAAO,KAKX2T,yBACItZ,KAAKuZ,UAAY,KACjBvZ,KAAK8W,QAAU,IC1RhB,SAAS1Q,GAAGpD,EAAKyO,EAAIlL,GAExB,OADAvD,EAAIoD,GAAGqL,EAAIlL,GACJ,WACHvD,EAAI0D,IAAI+K,EAAIlL,ICIpB,MAAMkT,GAAkB/b,OAAOgc,OAAO,CAClCC,QAAS,EACTC,cAAe,EACfC,WAAY,EACZC,cAAe,EAEfC,YAAa,EACbnT,eAAgB,IAEb,MAAMyM,WAAenN,EAMxB9F,YAAY4Z,EAAI/B,EAAK5P,GACjBoB,QACAzJ,KAAKia,WAAY,EACjBja,KAAKka,cAAgB,GACrBla,KAAKma,WAAa,GAClBna,KAAKoa,IAAM,EACXpa,KAAKqa,KAAO,GACZra,KAAKsa,MAAQ,GACbta,KAAKga,GAAKA,EACVha,KAAKiY,IAAMA,EACP5P,GAAQA,EAAKkS,OACbva,KAAKua,KAAOlS,EAAKkS,MAEjBva,KAAKga,GAAGQ,cACRxa,KAAKgK,OAKTyQ,mBACA,OAAQza,KAAKia,UAOjBS,YACI,GAAI1a,KAAK2a,KACL,OACJ,MAAMX,EAAKha,KAAKga,GAChBha,KAAK2a,KAAO,CACRvU,GAAG4T,EAAI,OAAQha,KAAKkR,OAAO1I,KAAKxI,OAChCoG,GAAG4T,EAAI,SAAUha,KAAK4a,SAASpS,KAAKxI,OACpCoG,GAAG4T,EAAI,QAASha,KAAK0R,QAAQlJ,KAAKxI,OAClCoG,GAAG4T,EAAI,QAASha,KAAKsR,QAAQ9I,KAAKxI,QAMtC6a,aACA,QAAS7a,KAAK2a,KAOlBhB,UACI,OAAI3Z,KAAKia,YAETja,KAAK0a,YACA1a,KAAKga,GAAG,kBACTha,KAAKga,GAAGhQ,OACR,SAAWhK,KAAKga,GAAGc,aACnB9a,KAAKkR,UALElR,KAWfgK,OACI,OAAOhK,KAAK2Z,UAQhBtP,QAAQlD,GAGJ,OAFAA,EAAKiR,QAAQ,WACbpY,KAAKkH,KAAKP,MAAM3G,KAAMmH,GACfnH,KASXkH,KAAKuK,KAAOtK,GACR,GAAIsS,GAAgB1R,eAAe0J,GAC/B,MAAM,IAAIpI,MAAM,IAAMoI,EAAK,8BAE/BtK,EAAKiR,QAAQ3G,GACb,MAAM9L,EAAS,CACXjD,KAAM8U,GAAWG,MACjBhV,KAAMwE,EAEVxB,QAAiB,IAGjB,GAFAA,EAAOnG,QAAQoS,UAAmC,IAAxB5R,KAAKsa,MAAM1I,SAEjC,oBAAsBzK,EAAKA,EAAKrF,OAAS,GAAI,CAC7C,MAAMgS,EAAK9T,KAAKoa,MACVW,EAAM5T,EAAK6T,MACjBhb,KAAKib,qBAAqBnH,EAAIiH,GAC9BpV,EAAOmO,GAAKA,EAEhB,MAAMoH,EAAsBlb,KAAKga,GAAGmB,QAChCnb,KAAKga,GAAGmB,OAAOhH,WACfnU,KAAKga,GAAGmB,OAAOhH,UAAUxK,SACvByR,EAAgBpb,KAAKsa,MAAMe,YAAcH,IAAwBlb,KAAKia,WAW5E,OAVImB,IAEKpb,KAAKia,WACVja,KAAKsb,wBAAwB3V,GAC7B3F,KAAK2F,OAAOA,IAGZ3F,KAAKma,WAAWnU,KAAKL,IAEzB3F,KAAKsa,MAAQ,GACNta,KAKXib,qBAAqBnH,EAAIiH,GACrB,MAAM7L,EAAUlP,KAAKsa,MAAMpL,QAC3B,QAAgBjP,IAAZiP,EAEA,YADAlP,KAAKqa,KAAKvG,GAAMiH,GAIpB,MAAMQ,EAAQvb,KAAKga,GAAGzR,cAAa,YACxBvI,KAAKqa,KAAKvG,GACjB,IAAK,IAAIhQ,EAAI,EAAGA,EAAI9D,KAAKma,WAAWrY,OAAQgC,IACpC9D,KAAKma,WAAWrW,GAAGgQ,KAAOA,GAC1B9T,KAAKma,WAAWlT,OAAOnD,EAAG,GAGlCiX,EAAIxZ,KAAKvB,KAAM,IAAIqJ,MAAM,8BAC1B6F,GACHlP,KAAKqa,KAAKvG,GAAM,IAAI3M,KAEhBnH,KAAKga,GAAGtR,eAAe6S,GACvBR,EAAIpU,MAAM3G,KAAM,CAAC,QAASmH,KASlCxB,OAAOA,GACHA,EAAOsS,IAAMjY,KAAKiY,IAClBjY,KAAKga,GAAGwB,QAAQ7V,GAOpBuL,SAC4B,mBAAblR,KAAKua,KACZva,KAAKua,MAAM5X,IACP3C,KAAK2F,OAAO,CAAEjD,KAAM8U,GAAW0B,QAASvW,KAAAA,OAI5C3C,KAAK2F,OAAO,CAAEjD,KAAM8U,GAAW0B,QAASvW,KAAM3C,KAAKua,OAS3D7I,QAAQ5F,GACC9L,KAAKia,WACNja,KAAKqH,aAAa,gBAAiByE,GAU3CwF,QAAQhI,EAAQC,GACZvJ,KAAKia,WAAY,SACVja,KAAK8T,GACZ9T,KAAKqH,aAAa,aAAciC,EAAQC,GAQ5CqR,SAASjV,GACL,MAAM8V,EAAgB9V,EAAOsS,MAAQjY,KAAKiY,IAC1C,GAAKwD,EAEL,OAAQ9V,EAAOjD,MACX,KAAK8U,GAAW0B,QACZ,GAAIvT,EAAOhD,MAAQgD,EAAOhD,KAAKkL,IAAK,CAChC,MAAMiG,EAAKnO,EAAOhD,KAAKkL,IACvB7N,KAAK0b,UAAU5H,QAGf9T,KAAKqH,aAAa,gBAAiB,IAAIgC,MAAM,8LAEjD,MACJ,KAAKmO,GAAWG,MAChB,KAAKH,GAAWM,aACZ9X,KAAK2b,QAAQhW,GACb,MACJ,KAAK6R,GAAWI,IAChB,KAAKJ,GAAWO,WACZ/X,KAAK4b,MAAMjW,GACX,MACJ,KAAK6R,GAAW2B,WACZnZ,KAAK6b,eACL,MACJ,KAAKrE,GAAW4B,cACZpZ,KAAKqZ,UACL,MAAMvN,EAAM,IAAIzC,MAAM1D,EAAOhD,KAAKmZ,SAElChQ,EAAInJ,KAAOgD,EAAOhD,KAAKA,KACvB3C,KAAKqH,aAAa,gBAAiByE,GACnC,OASZ6P,QAAQhW,GACJ,MAAMwB,EAAOxB,EAAOhD,MAAQ,GACxB,MAAQgD,EAAOmO,IACf3M,EAAKnB,KAAKhG,KAAK+a,IAAIpV,EAAOmO,KAE1B9T,KAAKia,UACLja,KAAK+b,UAAU5U,GAGfnH,KAAKka,cAAclU,KAAKtI,OAAOgc,OAAOvS,IAG9C4U,UAAU5U,GACN,GAAInH,KAAKgc,eAAiBhc,KAAKgc,cAAcla,OAAQ,CACjD,MAAMwF,EAAYtH,KAAKgc,cAAc5U,QACrC,IAAK,MAAM6U,KAAY3U,EACnB2U,EAAStV,MAAM3G,KAAMmH,GAG7BsC,MAAMvC,KAAKP,MAAM3G,KAAMmH,GAO3B4T,IAAIjH,GACA,MAAMrM,EAAOzH,KACb,IAAIkc,GAAO,EACX,OAAO,YAAa/U,GAEZ+U,IAEJA,GAAO,EACPzU,EAAK9B,OAAO,CACRjD,KAAM8U,GAAWI,IACjB9D,GAAIA,EACJnR,KAAMwE,MAUlByU,MAAMjW,GACF,MAAMoV,EAAM/a,KAAKqa,KAAK1U,EAAOmO,IACzB,oBAAsBiH,IACtBA,EAAIpU,MAAM3G,KAAM2F,EAAOhD,aAChB3C,KAAKqa,KAAK1U,EAAOmO,KAUhC4H,UAAU5H,GACN9T,KAAK8T,GAAKA,EACV9T,KAAKia,WAAY,EACjBja,KAAKmc,eACLnc,KAAKqH,aAAa,WAOtB8U,eACInc,KAAKka,cAAc3X,SAAS4E,GAASnH,KAAK+b,UAAU5U,KACpDnH,KAAKka,cAAgB,GACrBla,KAAKma,WAAW5X,SAASoD,IACrB3F,KAAKsb,wBAAwB3V,GAC7B3F,KAAK2F,OAAOA,MAEhB3F,KAAKma,WAAa,GAOtB0B,eACI7b,KAAKqZ,UACLrZ,KAAKsR,QAAQ,wBASjB+H,UACQrZ,KAAK2a,OAEL3a,KAAK2a,KAAKpY,SAAS6Z,GAAeA,MAClCpc,KAAK2a,UAAO1a,GAEhBD,KAAKga,GAAG,YAAYha,MAQxB6Z,aAUI,OATI7Z,KAAKia,WACLja,KAAK2F,OAAO,CAAEjD,KAAM8U,GAAW2B,aAGnCnZ,KAAKqZ,UACDrZ,KAAKia,WAELja,KAAKsR,QAAQ,wBAEVtR,KAQXkK,QACI,OAAOlK,KAAK6Z,aAShBjI,SAASA,GAEL,OADA5R,KAAKsa,MAAM1I,SAAWA,EACf5R,KASPqb,eAEA,OADArb,KAAKsa,MAAMe,UAAW,EACfrb,KAiBXkP,QAAQA,GAEJ,OADAlP,KAAKsa,MAAMpL,QAAUA,EACdlP,KASXqc,MAAMJ,GAGF,OAFAjc,KAAKgc,cAAgBhc,KAAKgc,eAAiB,GAC3Chc,KAAKgc,cAAchW,KAAKiW,GACjBjc,KASXsc,WAAWL,GAGP,OAFAjc,KAAKgc,cAAgBhc,KAAKgc,eAAiB,GAC3Chc,KAAKgc,cAAc5D,QAAQ6D,GACpBjc,KAQXuc,OAAON,GACH,IAAKjc,KAAKgc,cACN,OAAOhc,KAEX,GAAIic,EAAU,CACV,MAAM3U,EAAYtH,KAAKgc,cACvB,IAAK,IAAIlY,EAAI,EAAGA,EAAIwD,EAAUxF,OAAQgC,IAClC,GAAImY,IAAa3U,EAAUxD,GAEvB,OADAwD,EAAUL,OAAOnD,EAAG,GACb9D,UAKfA,KAAKgc,cAAgB,GAEzB,OAAOhc,KAQXwc,eACI,OAAOxc,KAAKgc,eAAiB,GAkBjCS,cAAcR,GAGV,OAFAjc,KAAK0c,sBAAwB1c,KAAK0c,uBAAyB,GAC3D1c,KAAK0c,sBAAsB1W,KAAKiW,GACzBjc,KAkBX2c,mBAAmBV,GAGf,OAFAjc,KAAK0c,sBAAwB1c,KAAK0c,uBAAyB,GAC3D1c,KAAK0c,sBAAsBtE,QAAQ6D,GAC5Bjc,KAsBX4c,eAAeX,GACX,IAAKjc,KAAK0c,sBACN,OAAO1c,KAEX,GAAIic,EAAU,CACV,MAAM3U,EAAYtH,KAAK0c,sBACvB,IAAK,IAAI5Y,EAAI,EAAGA,EAAIwD,EAAUxF,OAAQgC,IAClC,GAAImY,IAAa3U,EAAUxD,GAEvB,OADAwD,EAAUL,OAAOnD,EAAG,GACb9D,UAKfA,KAAK0c,sBAAwB,GAEjC,OAAO1c,KAQX6c,uBACI,OAAO7c,KAAK0c,uBAAyB,GASzCpB,wBAAwB3V,GACpB,GAAI3F,KAAK0c,uBAAyB1c,KAAK0c,sBAAsB5a,OAAQ,CACjE,MAAMwF,EAAYtH,KAAK0c,sBAAsBtV,QAC7C,IAAK,MAAM6U,KAAY3U,EACnB2U,EAAStV,MAAM3G,KAAM2F,EAAOhD,QCjkBrC,SAASma,GAAQzU,GACpBA,EAAOA,GAAQ,GACfrI,KAAK+c,GAAK1U,EAAK2U,KAAO,IACtBhd,KAAKid,IAAM5U,EAAK4U,KAAO,IACvBjd,KAAKkd,OAAS7U,EAAK6U,QAAU,EAC7Bld,KAAKmd,OAAS9U,EAAK8U,OAAS,GAAK9U,EAAK8U,QAAU,EAAI9U,EAAK8U,OAAS,EAClEnd,KAAKod,SAAW,EAQpBN,GAAQ1f,UAAUigB,SAAW,WACzB,IAAIN,EAAK/c,KAAK+c,GAAKjU,KAAKwU,IAAItd,KAAKkd,OAAQld,KAAKod,YAC9C,GAAIpd,KAAKmd,OAAQ,CACb,IAAII,EAAOzU,KAAK0U,SACZC,EAAY3U,KAAKoC,MAAMqS,EAAOvd,KAAKmd,OAASJ,GAChDA,EAAoC,IAAN,EAAxBjU,KAAKoC,MAAa,GAAPqS,IAAuBR,EAAKU,EAAYV,EAAKU,EAElE,OAAgC,EAAzB3U,KAAKkU,IAAID,EAAI/c,KAAKid,MAO7BH,GAAQ1f,UAAUsgB,MAAQ,WACtB1d,KAAKod,SAAW,GAOpBN,GAAQ1f,UAAUugB,OAAS,SAAUX,GACjChd,KAAK+c,GAAKC,GAOdF,GAAQ1f,UAAUwgB,OAAS,SAAUX,GACjCjd,KAAKid,IAAMA,GAOfH,GAAQ1f,UAAUygB,UAAY,SAAUV,GACpCnd,KAAKmd,OAASA,GC1DX,MAAMW,WAAgB5X,EACzB9F,YAAYqN,EAAKpF,GACb,IAAI0V,EACJtU,QACAzJ,KAAKge,KAAO,GACZhe,KAAK2a,KAAO,GACRlN,GAAO,kBAAoBA,IAC3BpF,EAAOoF,EACPA,OAAMxN,GAEVoI,EAAOA,GAAQ,GACfA,EAAK8F,KAAO9F,EAAK8F,MAAQ,aACzBnO,KAAKqI,KAAOA,EACZD,EAAsBpI,KAAMqI,GAC5BrI,KAAKie,cAAmC,IAAtB5V,EAAK4V,cACvBje,KAAKke,qBAAqB7V,EAAK6V,sBAAwBC,EAAAA,GACvDne,KAAKoe,kBAAkB/V,EAAK+V,mBAAqB,KACjDpe,KAAKqe,qBAAqBhW,EAAKgW,sBAAwB,KACvDre,KAAKse,oBAAwD,QAAnCP,EAAK1V,EAAKiW,2BAAwC,IAAPP,EAAgBA,EAAK,IAC1F/d,KAAKue,QAAU,IAAIzB,GAAQ,CACvBE,IAAKhd,KAAKoe,oBACVnB,IAAKjd,KAAKqe,uBACVlB,OAAQnd,KAAKse,wBAEjBte,KAAKkP,QAAQ,MAAQ7G,EAAK6G,QAAU,IAAQ7G,EAAK6G,SACjDlP,KAAK8a,YAAc,SACnB9a,KAAKyN,IAAMA,EACX,MAAM+Q,EAAUnW,EAAKoW,QAAUA,EAC/Bze,KAAK0e,QAAU,IAAIF,EAAQ/G,QAC3BzX,KAAK2e,QAAU,IAAIH,EAAQnG,QAC3BrY,KAAKwa,cAAoC,IAArBnS,EAAKuW,YACrB5e,KAAKwa,cACLxa,KAAKgK,OAEbiU,aAAaY,GACT,OAAK5c,UAAUH,QAEf9B,KAAK8e,gBAAkBD,EAChB7e,MAFIA,KAAK8e,cAIpBZ,qBAAqBW,GACjB,YAAU5e,IAAN4e,EACO7e,KAAK+e,uBAChB/e,KAAK+e,sBAAwBF,EACtB7e,MAEXoe,kBAAkBS,GACd,IAAId,EACJ,YAAU9d,IAAN4e,EACO7e,KAAKgf,oBAChBhf,KAAKgf,mBAAqBH,EACF,QAAvBd,EAAK/d,KAAKue,eAA4B,IAAPR,GAAyBA,EAAGJ,OAAOkB,GAC5D7e,MAEXse,oBAAoBO,GAChB,IAAId,EACJ,YAAU9d,IAAN4e,EACO7e,KAAKif,sBAChBjf,KAAKif,qBAAuBJ,EACJ,QAAvBd,EAAK/d,KAAKue,eAA4B,IAAPR,GAAyBA,EAAGF,UAAUgB,GAC/D7e,MAEXqe,qBAAqBQ,GACjB,IAAId,EACJ,YAAU9d,IAAN4e,EACO7e,KAAKkf,uBAChBlf,KAAKkf,sBAAwBL,EACL,QAAvBd,EAAK/d,KAAKue,eAA4B,IAAPR,GAAyBA,EAAGH,OAAOiB,GAC5D7e,MAEXkP,QAAQ2P,GACJ,OAAK5c,UAAUH,QAEf9B,KAAKmf,SAAWN,EACT7e,MAFIA,KAAKmf,SAUpBC,wBAESpf,KAAKqf,eACNrf,KAAK8e,eACqB,IAA1B9e,KAAKue,QAAQnB,UAEbpd,KAAKsf,YAUbtV,KAAKzD,GACD,IAAKvG,KAAK8a,YAAY5M,QAAQ,QAC1B,OAAOlO,KACXA,KAAKmb,OAAS,IAAIoE,GAAOvf,KAAKyN,IAAKzN,KAAKqI,MACxC,MAAMyB,EAAS9J,KAAKmb,OACd1T,EAAOzH,KACbA,KAAK8a,YAAc,UACnB9a,KAAKwf,eAAgB,EAErB,MAAMC,EAAiBrZ,GAAG0D,EAAQ,QAAQ,WACtCrC,EAAKyJ,SACL3K,GAAMA,OAGJmZ,EAAWtZ,GAAG0D,EAAQ,SAAUgC,IAClCrE,EAAKgI,UACLhI,EAAKqT,YAAc,SACnB9a,KAAKqH,aAAa,QAASyE,GACvBvF,EACAA,EAAGuF,GAIHrE,EAAK2X,0BAGb,IAAI,IAAUpf,KAAKmf,SAAU,CACzB,MAAMjQ,EAAUlP,KAAKmf,SACL,IAAZjQ,GACAuQ,IAGJ,MAAMlE,EAAQvb,KAAKuI,cAAa,KAC5BkX,IACA3V,EAAOI,QAEPJ,EAAO5C,KAAK,QAAS,IAAImC,MAAM,cAChC6F,GACClP,KAAKqI,KAAK8I,WACVoK,EAAMlK,QAEVrR,KAAK2a,KAAK3U,MAAK,WACXmC,aAAaoT,MAKrB,OAFAvb,KAAK2a,KAAK3U,KAAKyZ,GACfzf,KAAK2a,KAAK3U,KAAK0Z,GACR1f,KAQX2Z,QAAQpT,GACJ,OAAOvG,KAAKgK,KAAKzD,GAOrB2K,SAEIlR,KAAKyP,UAELzP,KAAK8a,YAAc,OACnB9a,KAAKqH,aAAa,QAElB,MAAMyC,EAAS9J,KAAKmb,OACpBnb,KAAK2a,KAAK3U,KAAKI,GAAG0D,EAAQ,OAAQ9J,KAAK2f,OAAOnX,KAAKxI,OAAQoG,GAAG0D,EAAQ,OAAQ9J,KAAK4f,OAAOpX,KAAKxI,OAAQoG,GAAG0D,EAAQ,QAAS9J,KAAK0R,QAAQlJ,KAAKxI,OAAQoG,GAAG0D,EAAQ,QAAS9J,KAAKsR,QAAQ9I,KAAKxI,OAAQoG,GAAGpG,KAAK2e,QAAS,UAAW3e,KAAK6f,UAAUrX,KAAKxI,QAOvP2f,SACI3f,KAAKqH,aAAa,QAOtBuY,OAAOjd,GACH3C,KAAK2e,QAAQpG,IAAI5V,GAOrBkd,UAAUla,GACN3F,KAAKqH,aAAa,SAAU1B,GAOhC+L,QAAQ5F,GACJ9L,KAAKqH,aAAa,QAASyE,GAQ/BhC,OAAOmO,EAAK5P,GACR,IAAIyB,EAAS9J,KAAKge,KAAK/F,GAKvB,OAJKnO,IACDA,EAAS,IAAIuJ,GAAOrT,KAAMiY,EAAK5P,GAC/BrI,KAAKge,KAAK/F,GAAOnO,GAEdA,EAQXgW,SAAShW,GACL,MAAMkU,EAAOtgB,OAAO4E,KAAKtC,KAAKge,MAC9B,IAAK,MAAM/F,KAAO+F,EAAM,CACpB,MAAMlU,EAAS9J,KAAKge,KAAK/F,GACzB,GAAInO,EAAO+Q,OACP,OAGR7a,KAAK+f,SAQTvE,QAAQ7V,GACJ,MAAMH,EAAiBxF,KAAK0e,QAAQ3T,OAAOpF,GAC3C,IAAK,IAAI7B,EAAI,EAAGA,EAAI0B,EAAe1D,OAAQgC,IACvC9D,KAAKmb,OAAO7Q,MAAM9E,EAAe1B,GAAI6B,EAAOnG,SAQpDiQ,UACIzP,KAAK2a,KAAKpY,SAAS6Z,GAAeA,MAClCpc,KAAK2a,KAAK7Y,OAAS,EACnB9B,KAAK2e,QAAQtF,UAOjB0G,SACI/f,KAAKwf,eAAgB,EACrBxf,KAAKqf,eAAgB,EACrBrf,KAAKsR,QAAQ,gBACTtR,KAAKmb,QACLnb,KAAKmb,OAAOjR,QAOpB2P,aACI,OAAO7Z,KAAK+f,SAOhBzO,QAAQhI,EAAQC,GACZvJ,KAAKyP,UACLzP,KAAKue,QAAQb,QACb1d,KAAK8a,YAAc,SACnB9a,KAAKqH,aAAa,QAASiC,EAAQC,GAC/BvJ,KAAK8e,gBAAkB9e,KAAKwf,eAC5Bxf,KAAKsf,YAQbA,YACI,GAAItf,KAAKqf,eAAiBrf,KAAKwf,cAC3B,OAAOxf,KACX,MAAMyH,EAAOzH,KACb,GAAIA,KAAKue,QAAQnB,UAAYpd,KAAK+e,sBAC9B/e,KAAKue,QAAQb,QACb1d,KAAKqH,aAAa,oBAClBrH,KAAKqf,eAAgB,MAEpB,CACD,MAAMW,EAAQhgB,KAAKue,QAAQlB,WAC3Brd,KAAKqf,eAAgB,EACrB,MAAM9D,EAAQvb,KAAKuI,cAAa,KACxBd,EAAK+X,gBAETxf,KAAKqH,aAAa,oBAAqBI,EAAK8W,QAAQnB,UAEhD3V,EAAK+X,eAET/X,EAAKuC,MAAM8B,IACHA,GACArE,EAAK4X,eAAgB,EACrB5X,EAAK6X,YACLtf,KAAKqH,aAAa,kBAAmByE,IAGrCrE,EAAKwY,oBAGdD,GACChgB,KAAKqI,KAAK8I,WACVoK,EAAMlK,QAEVrR,KAAK2a,KAAK3U,MAAK,WACXmC,aAAaoT,OASzB0E,cACI,MAAMC,EAAUlgB,KAAKue,QAAQnB,SAC7Bpd,KAAKqf,eAAgB,EACrBrf,KAAKue,QAAQb,QACb1d,KAAKqH,aAAa,YAAa6Y,ICrVvC,MAAMC,GAAQ,GACd,SAAStc,GAAO4J,EAAKpF,GACE,kBAARoF,IACPpF,EAAOoF,EACPA,OAAMxN,GAEVoI,EAAOA,GAAQ,GACf,MAAM+X,EAASjK,GAAI1I,EAAKpF,EAAK8F,MAAQ,cAC/BsE,EAAS2N,EAAO3N,OAChBqB,EAAKsM,EAAOtM,GACZ3F,EAAOiS,EAAOjS,KACdsN,EAAgB0E,GAAMrM,IAAO3F,KAAQgS,GAAMrM,GAAI,QAC/CuM,EAAgBhY,EAAKiY,UACvBjY,EAAK,0BACL,IAAUA,EAAKkY,WACf9E,EACJ,IAAIzB,EAaJ,OAZIqG,EACArG,EAAK,IAAI8D,GAAQrL,EAAQpK,IAGpB8X,GAAMrM,KACPqM,GAAMrM,GAAM,IAAIgK,GAAQrL,EAAQpK,IAEpC2R,EAAKmG,GAAMrM,IAEXsM,EAAOxW,QAAUvB,EAAKuB,QACtBvB,EAAKuB,MAAQwW,EAAOtN,UAEjBkH,EAAGlQ,OAAOsW,EAAOjS,KAAM9F,GAIlC3K,OAAO2Q,OAAOxK,GAAQ,CAClBia,QADkB,GAElBzK,OAFkB,GAGlB2G,GAAInW,GACJ8V,QAAS9V","sources":["webpack://wherechat/./node_modules/core-js/internals/array-buffer-native.js","webpack://wherechat/./node_modules/core-js/internals/array-buffer-view-core.js","webpack://wherechat/./node_modules/core-js/internals/correct-prototype-getter.js","webpack://wherechat/./node_modules/core-js/internals/object-get-prototype-of.js","webpack://wherechat/./node_modules/core-js/internals/to-offset.js","webpack://wherechat/./node_modules/core-js/internals/to-positive-integer.js","webpack://wherechat/./node_modules/core-js/modules/es.typed-array.at.js","webpack://wherechat/./node_modules/core-js/modules/es.typed-array.set.js","webpack://wherechat/./node_modules/engine.io-parser/build/esm/commons.js","webpack://wherechat/./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack://wherechat/./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack://wherechat/./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack://wherechat/./node_modules/engine.io-parser/build/esm/index.js","webpack://wherechat/./node_modules/@socket.io/component-emitter/index.mjs","webpack://wherechat/./node_modules/engine.io-client/build/esm/globalThis.browser.js","webpack://wherechat/./node_modules/engine.io-client/build/esm/util.js","webpack://wherechat/./node_modules/engine.io-client/build/esm/transport.js","webpack://wherechat/./node_modules/engine.io-client/build/esm/contrib/yeast.js","webpack://wherechat/./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack://wherechat/./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack://wherechat/./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","webpack://wherechat/./node_modules/engine.io-client/build/esm/transports/polling.js","webpack://wherechat/./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","webpack://wherechat/./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack://wherechat/./node_modules/engine.io-client/build/esm/transports/index.js","webpack://wherechat/./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack://wherechat/./node_modules/engine.io-client/build/esm/socket.js","webpack://wherechat/./node_modules/engine.io-client/build/esm/index.js","webpack://wherechat/./node_modules/socket.io-client/build/esm/url.js","webpack://wherechat/./node_modules/socket.io-parser/build/esm/is-binary.js","webpack://wherechat/./node_modules/socket.io-parser/build/esm/binary.js","webpack://wherechat/./node_modules/socket.io-parser/build/esm/index.js","webpack://wherechat/./node_modules/socket.io-client/build/esm/on.js","webpack://wherechat/./node_modules/socket.io-client/build/esm/socket.js","webpack://wherechat/./node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack://wherechat/./node_modules/socket.io-client/build/esm/manager.js","webpack://wherechat/./node_modules/socket.io-client/build/esm/index.js"],"sourcesContent":["// eslint-disable-next-line es/no-typed-arrays -- safe\nmodule.exports = typeof ArrayBuffer != 'undefined' && typeof DataView != 'undefined';\n","'use strict';\nvar NATIVE_ARRAY_BUFFER = require('../internals/array-buffer-native');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar hasOwn = require('../internals/has-own-property');\nvar classof = require('../internals/classof');\nvar tryToString = require('../internals/try-to-string');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar defineProperty = require('../internals/object-define-property').f;\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar uid = require('../internals/uid');\n\nvar Int8Array = global.Int8Array;\nvar Int8ArrayPrototype = Int8Array && Int8Array.prototype;\nvar Uint8ClampedArray = global.Uint8ClampedArray;\nvar Uint8ClampedArrayPrototype = Uint8ClampedArray && Uint8ClampedArray.prototype;\nvar TypedArray = Int8Array && getPrototypeOf(Int8Array);\nvar TypedArrayPrototype = Int8ArrayPrototype && getPrototypeOf(Int8ArrayPrototype);\nvar ObjectPrototype = Object.prototype;\nvar TypeError = global.TypeError;\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar TYPED_ARRAY_TAG = uid('TYPED_ARRAY_TAG');\nvar TYPED_ARRAY_CONSTRUCTOR = uid('TYPED_ARRAY_CONSTRUCTOR');\n// Fixing native typed arrays in Opera Presto crashes the browser, see #595\nvar NATIVE_ARRAY_BUFFER_VIEWS = NATIVE_ARRAY_BUFFER && !!setPrototypeOf && classof(global.opera) !== 'Opera';\nvar TYPED_ARRAY_TAG_REQUIRED = false;\nvar NAME, Constructor, Prototype;\n\nvar TypedArrayConstructorsList = {\n  Int8Array: 1,\n  Uint8Array: 1,\n  Uint8ClampedArray: 1,\n  Int16Array: 2,\n  Uint16Array: 2,\n  Int32Array: 4,\n  Uint32Array: 4,\n  Float32Array: 4,\n  Float64Array: 8\n};\n\nvar BigIntArrayConstructorsList = {\n  BigInt64Array: 8,\n  BigUint64Array: 8\n};\n\nvar isView = function isView(it) {\n  if (!isObject(it)) return false;\n  var klass = classof(it);\n  return klass === 'DataView'\n    || hasOwn(TypedArrayConstructorsList, klass)\n    || hasOwn(BigIntArrayConstructorsList, klass);\n};\n\nvar isTypedArray = function (it) {\n  if (!isObject(it)) return false;\n  var klass = classof(it);\n  return hasOwn(TypedArrayConstructorsList, klass)\n    || hasOwn(BigIntArrayConstructorsList, klass);\n};\n\nvar aTypedArray = function (it) {\n  if (isTypedArray(it)) return it;\n  throw TypeError('Target is not a typed array');\n};\n\nvar aTypedArrayConstructor = function (C) {\n  if (isCallable(C) && (!setPrototypeOf || isPrototypeOf(TypedArray, C))) return C;\n  throw TypeError(tryToString(C) + ' is not a typed array constructor');\n};\n\nvar exportTypedArrayMethod = function (KEY, property, forced, options) {\n  if (!DESCRIPTORS) return;\n  if (forced) for (var ARRAY in TypedArrayConstructorsList) {\n    var TypedArrayConstructor = global[ARRAY];\n    if (TypedArrayConstructor && hasOwn(TypedArrayConstructor.prototype, KEY)) try {\n      delete TypedArrayConstructor.prototype[KEY];\n    } catch (error) {\n      // old WebKit bug - some methods are non-configurable\n      try {\n        TypedArrayConstructor.prototype[KEY] = property;\n      } catch (error2) { /* empty */ }\n    }\n  }\n  if (!TypedArrayPrototype[KEY] || forced) {\n    redefine(TypedArrayPrototype, KEY, forced ? property\n      : NATIVE_ARRAY_BUFFER_VIEWS && Int8ArrayPrototype[KEY] || property, options);\n  }\n};\n\nvar exportTypedArrayStaticMethod = function (KEY, property, forced) {\n  var ARRAY, TypedArrayConstructor;\n  if (!DESCRIPTORS) return;\n  if (setPrototypeOf) {\n    if (forced) for (ARRAY in TypedArrayConstructorsList) {\n      TypedArrayConstructor = global[ARRAY];\n      if (TypedArrayConstructor && hasOwn(TypedArrayConstructor, KEY)) try {\n        delete TypedArrayConstructor[KEY];\n      } catch (error) { /* empty */ }\n    }\n    if (!TypedArray[KEY] || forced) {\n      // V8 ~ Chrome 49-50 `%TypedArray%` methods are non-writable non-configurable\n      try {\n        return redefine(TypedArray, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS && TypedArray[KEY] || property);\n      } catch (error) { /* empty */ }\n    } else return;\n  }\n  for (ARRAY in TypedArrayConstructorsList) {\n    TypedArrayConstructor = global[ARRAY];\n    if (TypedArrayConstructor && (!TypedArrayConstructor[KEY] || forced)) {\n      redefine(TypedArrayConstructor, KEY, property);\n    }\n  }\n};\n\nfor (NAME in TypedArrayConstructorsList) {\n  Constructor = global[NAME];\n  Prototype = Constructor && Constructor.prototype;\n  if (Prototype) createNonEnumerableProperty(Prototype, TYPED_ARRAY_CONSTRUCTOR, Constructor);\n  else NATIVE_ARRAY_BUFFER_VIEWS = false;\n}\n\nfor (NAME in BigIntArrayConstructorsList) {\n  Constructor = global[NAME];\n  Prototype = Constructor && Constructor.prototype;\n  if (Prototype) createNonEnumerableProperty(Prototype, TYPED_ARRAY_CONSTRUCTOR, Constructor);\n}\n\n// WebKit bug - typed arrays constructors prototype is Object.prototype\nif (!NATIVE_ARRAY_BUFFER_VIEWS || !isCallable(TypedArray) || TypedArray === Function.prototype) {\n  // eslint-disable-next-line no-shadow -- safe\n  TypedArray = function TypedArray() {\n    throw TypeError('Incorrect invocation');\n  };\n  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {\n    if (global[NAME]) setPrototypeOf(global[NAME], TypedArray);\n  }\n}\n\nif (!NATIVE_ARRAY_BUFFER_VIEWS || !TypedArrayPrototype || TypedArrayPrototype === ObjectPrototype) {\n  TypedArrayPrototype = TypedArray.prototype;\n  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {\n    if (global[NAME]) setPrototypeOf(global[NAME].prototype, TypedArrayPrototype);\n  }\n}\n\n// WebKit bug - one more object in Uint8ClampedArray prototype chain\nif (NATIVE_ARRAY_BUFFER_VIEWS && getPrototypeOf(Uint8ClampedArrayPrototype) !== TypedArrayPrototype) {\n  setPrototypeOf(Uint8ClampedArrayPrototype, TypedArrayPrototype);\n}\n\nif (DESCRIPTORS && !hasOwn(TypedArrayPrototype, TO_STRING_TAG)) {\n  TYPED_ARRAY_TAG_REQUIRED = true;\n  defineProperty(TypedArrayPrototype, TO_STRING_TAG, { get: function () {\n    return isObject(this) ? this[TYPED_ARRAY_TAG] : undefined;\n  } });\n  for (NAME in TypedArrayConstructorsList) if (global[NAME]) {\n    createNonEnumerableProperty(global[NAME], TYPED_ARRAY_TAG, NAME);\n  }\n}\n\nmodule.exports = {\n  NATIVE_ARRAY_BUFFER_VIEWS: NATIVE_ARRAY_BUFFER_VIEWS,\n  TYPED_ARRAY_CONSTRUCTOR: TYPED_ARRAY_CONSTRUCTOR,\n  TYPED_ARRAY_TAG: TYPED_ARRAY_TAG_REQUIRED && TYPED_ARRAY_TAG,\n  aTypedArray: aTypedArray,\n  aTypedArrayConstructor: aTypedArrayConstructor,\n  exportTypedArrayMethod: exportTypedArrayMethod,\n  exportTypedArrayStaticMethod: exportTypedArrayStaticMethod,\n  isView: isView,\n  isTypedArray: isTypedArray,\n  TypedArray: TypedArray,\n  TypedArrayPrototype: TypedArrayPrototype\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","var global = require('../internals/global');\nvar hasOwn = require('../internals/has-own-property');\nvar isCallable = require('../internals/is-callable');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar Object = global.Object;\nvar ObjectPrototype = Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.getprototypeof\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {\n  var object = toObject(O);\n  if (hasOwn(object, IE_PROTO)) return object[IE_PROTO];\n  var constructor = object.constructor;\n  if (isCallable(constructor) && object instanceof constructor) {\n    return constructor.prototype;\n  } return object instanceof Object ? ObjectPrototype : null;\n};\n","var global = require('../internals/global');\nvar toPositiveInteger = require('../internals/to-positive-integer');\n\nvar RangeError = global.RangeError;\n\nmodule.exports = function (it, BYTES) {\n  var offset = toPositiveInteger(it);\n  if (offset % BYTES) throw RangeError('Wrong offset');\n  return offset;\n};\n","var global = require('../internals/global');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar RangeError = global.RangeError;\n\nmodule.exports = function (it) {\n  var result = toIntegerOrInfinity(it);\n  if (result < 0) throw RangeError(\"The argument can't be less than 0\");\n  return result;\n};\n","'use strict';\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\n// `%TypedArray%.prototype.at` method\n// https://github.com/tc39/proposal-relative-indexing-method\nexportTypedArrayMethod('at', function at(index) {\n  var O = aTypedArray(this);\n  var len = lengthOfArrayLike(O);\n  var relativeIndex = toIntegerOrInfinity(index);\n  var k = relativeIndex >= 0 ? relativeIndex : len + relativeIndex;\n  return (k < 0 || k >= len) ? undefined : O[k];\n});\n","'use strict';\nvar global = require('../internals/global');\nvar call = require('../internals/function-call');\nvar ArrayBufferViewCore = require('../internals/array-buffer-view-core');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toOffset = require('../internals/to-offset');\nvar toIndexedObject = require('../internals/to-object');\nvar fails = require('../internals/fails');\n\nvar RangeError = global.RangeError;\nvar Int8Array = global.Int8Array;\nvar Int8ArrayPrototype = Int8Array && Int8Array.prototype;\nvar $set = Int8ArrayPrototype && Int8ArrayPrototype.set;\nvar aTypedArray = ArrayBufferViewCore.aTypedArray;\nvar exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;\n\nvar WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS = !fails(function () {\n  // eslint-disable-next-line es/no-typed-arrays -- required for testing\n  var array = new Uint8ClampedArray(2);\n  call($set, array, { length: 1, 0: 3 }, 1);\n  return array[1] !== 3;\n});\n\n// https://bugs.chromium.org/p/v8/issues/detail?id=11294 and other\nvar TO_OBJECT_BUG = WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS && ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS && fails(function () {\n  var array = new Int8Array(2);\n  array.set(1);\n  array.set('2', 1);\n  return array[0] !== 0 || array[1] !== 2;\n});\n\n// `%TypedArray%.prototype.set` method\n// https://tc39.es/ecma262/#sec-%typedarray%.prototype.set\nexportTypedArrayMethod('set', function set(arrayLike /* , offset */) {\n  aTypedArray(this);\n  var offset = toOffset(arguments.length > 1 ? arguments[1] : undefined, 1);\n  var src = toIndexedObject(arrayLike);\n  if (WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS) return call($set, this, src, offset);\n  var length = this.length;\n  var len = lengthOfArrayLike(src);\n  var index = 0;\n  if (len + offset > length) throw RangeError('Wrong length');\n  while (index < len) this[offset + index] = src[index++];\n}, !WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS || TO_OBJECT_BUG);\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * const handler = (event, ...args) => {\n     *   console.log(event);\n     * }\n     *\n     * socket.onAnyOutgoing(handler);\n     *\n     * // then later\n     * socket.offAnyOutgoing(handler);\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n"],"names":["module","exports","ArrayBuffer","DataView","NAME","Constructor","Prototype","NATIVE_ARRAY_BUFFER","DESCRIPTORS","global","isCallable","isObject","hasOwn","classof","tryToString","createNonEnumerableProperty","redefine","defineProperty","isPrototypeOf","getPrototypeOf","setPrototypeOf","wellKnownSymbol","uid","Int8Array","Int8ArrayPrototype","prototype","Uint8ClampedArray","Uint8ClampedArrayPrototype","TypedArray","TypedArrayPrototype","ObjectPrototype","Object","TypeError","TO_STRING_TAG","TYPED_ARRAY_TAG","TYPED_ARRAY_CONSTRUCTOR","NATIVE_ARRAY_BUFFER_VIEWS","opera","TYPED_ARRAY_TAG_REQUIRED","TypedArrayConstructorsList","Uint8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigIntArrayConstructorsList","BigInt64Array","BigUint64Array","isView","it","klass","isTypedArray","aTypedArray","aTypedArrayConstructor","C","exportTypedArrayMethod","KEY","property","forced","options","ARRAY","TypedArrayConstructor","error","error2","exportTypedArrayStaticMethod","Function","get","this","undefined","fails","F","constructor","toObject","sharedKey","CORRECT_PROTOTYPE_GETTER","IE_PROTO","O","object","toPositiveInteger","RangeError","BYTES","offset","toIntegerOrInfinity","result","ArrayBufferViewCore","lengthOfArrayLike","index","len","relativeIndex","k","call","toOffset","toIndexedObject","$set","set","WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS","array","length","TO_OBJECT_BUG","arrayLike","arguments","src","PACKET_TYPES","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","toString","withNativeArrayBuffer","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","split","readAsDataURL","chars","lookup","i","charCodeAt","decode","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","p","arraybuffer","bytes","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","packetType","decoded","SEPARATOR","String","fromCharCode","encodePayload","packets","encodedPackets","Array","count","packet","join","decodePayload","encodedPayload","decodedPacket","push","protocol","Emitter","mixin","on","addEventListener","event","fn","_callbacks","once","off","apply","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","slice","emitReserved","listeners","hasListeners","globalThisShim","self","window","pick","attr","reduce","acc","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","globalThis","clearTimeoutFn","BASE64_OVERHEAD","byteLength","utf8Length","Math","ceil","size","str","c","l","TransportError","Error","reason","description","context","super","Transport","writable","query","readyState","socket","onError","open","doOpen","close","doClose","onClose","send","write","onOpen","onData","onPacket","details","alphabet","map","prev","seed","encode","num","encoded","floor","yeast","now","Date","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","value","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","empty","hasXHR2","xhr","responseType","Polling","polling","location","isSSL","port","xd","hostname","xs","secure","forceBase64","name","poll","pause","onPause","total","doPoll","doWrite","uri","schema","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","ipv6","indexOf","path","request","assign","Request","req","method","xhrStatus","pollXhr","async","xscheme","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","document","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","terminationEvent","nextTick","isPromiseAvailable","Promise","resolve","then","WebSocket","usingBrowserWebSocket","defaultBinaryType","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","compress","perMessageDeflate","Buffer","threshold","transports","websocket","re","parts","parse","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","queryKey","regx","names","substr","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","shift","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","onTransportClose","onupgrade","to","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","shouldCheckPayloadSize","payloadSize","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","url","loc","test","href","withNativeFile","File","isBinary","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","BINARY_EVENT","BINARY_ACK","encodeAsBinary","nsp","stringify","deconstruction","unshift","Decoder","reviver","add","decodeString","reconstructor","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","volatile","notifyOutgoingListeners","timer","_packet","sameNamespace","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","newConnection","forceNew","multiplex"],"sourceRoot":""}