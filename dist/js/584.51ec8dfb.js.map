{"version":3,"file":"js/584.51ec8dfb.js","mappings":"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","sources":["webpack://wherechat/./src/views/MessagesView.vue","webpack://wherechat/./src/views/MessagesView.vue?0e2c"],"sourcesContent":["<template>\n  <div class=\"messages\">\n    <top-navigation />\n    <div class=\"messages__container\">\n      <h5 class=\"messages__container__title\">Messages</h5>\n      <form @submit.prevent=\"\" class=\"mb-3\">\n        <div class=\"row g-2 align-items-center\">\n          <div class=\"col-md-12\">\n            <input\n              type=\"text\"\n              id=\"search\"\n              class=\"form-control\"\n              placeholder=\"search...\"\n              v-model=\"searchInput\"\n              @keyup=\"searchMessages\"\n            />\n          </div>\n        </div>\n      </form>\n      <div class=\"messages__items\">\n        <router-link\n          v-for=\"message in filteredMessages\"\n          :key=\"message.id\"\n          :to=\"messagePath + message.id\"\n          active-class=\"active\"\n          class=\"link-list\"\n        >\n          <div class=\"messages__items__img-container border\">\n            <img :src=\"serverDomain + message.imageUrl\" alt=\"\" />\n          </div>\n          <div class=\"messages__items__caption-container\">\n            <span class=\"messages__items__caption-container__name\">{{\n              message.name\n            }}</span>\n            <span>{{ message.content }}</span>\n          </div>\n          <span class=\"messages__items__caption-container__time\">{{\n            message.date\n          }}</span>\n        </router-link>\n      </div>\n    </div>\n    <router-view />\n    <bottom-navigation />\n  </div>\n</template>\n\n<script>\nimport BottomNavigation from \"@/components/BottomNavigation.vue\"\nimport TopNavigation from \"@/components/TopNavigation.vue\"\nimport axios from 'axios'\nimport store from '@/store'\nimport { mapState } from 'vuex'\nimport openSocket from 'socket.io-client'\n\nexport default {\n  name: \"MessagesView\",\n  components: {\n    BottomNavigation,\n    TopNavigation,\n  },\n  data() {\n    return {\n      messagePath: '/messages/',\n      messages: [],\n      searchInput: ''\n    };\n  },\n  computed: {\n    ...mapState(['serverDomain']),\n    filteredMessages() {\n      let messages = [];\n\n      for (let i = 0; i < this.messages.length; i++) {\n        let msg = this.messages[i];\n        msg.date = new Date(msg.date).toDateString()\n        if (msg.content.length > 30) {\n          let newMsgContent = msg.content.slice(0, 30);\n\n          let i = newMsgContent.replace(/,[^a-zA-Z0-9]$/g, \"\");\n\n          msg.content = `${i}...`;\n        }\n\n        messages.push(msg);\n      }\n\n      return messages;\n    },\n  },\n  methods: {\n    searchMessages() {\n      let input = this.searchInput.toLowerCase()\n      let linkList = document.getElementsByClassName('link-list')\n      let name\n\n      for(let i = 0; i < linkList.length; i++) {\n        name = linkList[i].getElementsByClassName('messages__items__caption-container__name')[0]\n        if(name.innerHTML.toLowerCase().includes(input)) {\n          linkList[i].style.display = ''\n        } else {\n          linkList[i].style.display = 'none'\n        }\n      }\n    },\n    async fetchMessages() {\n      try {\n        const res = await axios.get(store.state.serverDomain + 'message/get-all-messages', {\n          headers: {\n            Authorization: `Bearer ${store.state.token}`\n          }\n        })\n\n        const messages = []\n        const loggedUser = store.state.user\n        let user\n        \n        for(const message of res.data.messages) {\n          if(message.from._id !== loggedUser.id && messages.findIndex(user => user.id === message.from._id) === -1) {\n            user = { \n              id: message.from._id, \n              imageUrl: message.from.imageUrl, \n              content: message.content,\n              name: message.from.firstName + ' ' + message.from.lastName,\n              date: message.createdAt,\n              viewed: message.viewed,\n              me: false,\n            }\n            messages.push(user)\n          } \n\n          if(message.to._id !== loggedUser.id && messages.findIndex(user => user.id === message.to._id) === -1) {\n            user = { \n              id: message.to._id, \n              imageUrl: message.to.imageUrl, \n              content: message.content,\n              name: message.to.firstName + ' ' + message.to.lastName,\n              date: message.createdAt,\n              viewed: message.viewed,\n              me: true \n            }\n            messages.push(user)\n          }\n        }\n        this.messages = messages\n      } catch(error) {\n        if(error.response && error.response.status === 401) {\n          this.$router.push('/login')\n        }\n      }\n    },\n    reatToChange(data) {\n      const loggedUser = store.state.user\n      let user\n      let message = data.message\n      if(message.from._id !== loggedUser.id) {\n        if(this.messages.findIndex(user => user.id === message.from._id) !== -1) {\n          this.messages.splice(this.messages.findIndex(user => user.id === message.from._id), 1)\n        }\n        user = { \n          id: message.from._id, \n          imageUrl: message.from.imageUrl, \n          content: message.content,\n          name: message.from.firstName + ' ' + message.from.lastName,\n          date: message.createdAt,\n          viewed: message.viewed,\n          me: false,\n        }\n        this.messages.unshift(user)\n      }\n\n      if(message.to._id !== loggedUser.id) {\n        if(this.messages.findIndex(user => user.id === message.to._id) !== -1) {\n          this.messages.splice(this.messages.findIndex(user => user.id === message.to._id), 1)\n        }\n        user = { \n          id: message.to._id, \n          imageUrl: message.to.imageUrl, \n          content: message.content,\n          name: message.to.firstName + ' ' + message.to.lastName,\n          date: message.createdAt,\n          viewed: message.viewed,\n          me: true \n        }\n        this.messages.unshift(user)\n      }\n    }\n  },\n  created() {\n    this.fetchMessages()\n  },\n  mounted() {\n    const socket = openSocket(store.state.serverDomain)\n    socket.on('messages', data => {\n      if(data.action === 'sent') {\n        this.reatToChange(data)\n      }\n    })\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.messages__container {\n  margin-top: 5rem;\n  padding: 0.5rem 0;\n  width: 100%;\n  min-height: 100vh;\n  overflow: auto;\n\n  .messages__container__title,\n  form {\n    padding-left: 1.5rem;\n    padding-right: 1.5rem;\n  }\n\n  form {\n    #search {\n      background-image: url(\"../assets/images/search.png\");\n      background-repeat: no-repeat;\n      background-position: 1rem 50%;\n      background-size: 15px;\n      padding-left: 2.5rem;\n      // background-color: #e4e6ebb7;\n      border-radius: 2rem;\n    }\n\n    #search:focus {\n      box-shadow: none;\n      border-color: #ced4da;\n    }\n  }\n\n  .messages__items {\n    margin-bottom: 5rem;\n    a {\n      display: flex;\n      align-items: center;\n      padding: 0.5rem 1.5rem;\n      position: relative;\n\n      &:hover,\n      &.active {\n        background-color: #e4e6ebb7;\n      }\n\n      span.messages__items__caption-container__time {\n        position: absolute;\n        font-weight: bold;\n        top: 0.9rem;\n        right: 1.5rem;\n      }\n\n      .messages__items__img-container {\n        width: 3rem;\n        height: 3rem;\n        border-radius: 50%;\n        margin-right: 1rem;\n        overflow: hidden;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        img {\n          width: 3rem;\n        }\n      }\n\n      span {\n        color: #65676b;\n        font-size: 0.7rem;\n      }\n\n      .messages__items__caption-container {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n\n        span.messages__items__caption-container__name {\n          color: black;\n          font-weight: bold;\n          font-size: 0.8rem;\n        }\n      }\n\n      @media (min-width: 380px) {\n        .messages__items__img-container {\n          width: 4rem;\n          height: 4rem;\n\n          img {\n            width: 4rem;\n          }\n        }\n\n        span {\n          font-size: 0.8rem;\n        }\n\n        .messages__items__caption-container {\n          span.messages__items__caption-container__name {\n            font-size: 0.9rem;\n          }\n        }\n      }\n    }\n  }\n}\n\n@media (min-width: 768px) {\n  .messages__container {\n    width: 40%;\n    border-right: 1px solid #d0d2d4;\n  }\n}\n@media (min-width: 992px) {\n  .messages__container {\n    width: 40%;\n  }\n}\n</style>","import { render } from \"./MessagesView.vue?vue&type=template&id=06c0bf06\"\nimport script from \"./MessagesView.vue?vue&type=script&lang=js\"\nexport * from \"./MessagesView.vue?vue&type=script&lang=js\"\n\nimport \"./MessagesView.vue?vue&type=style&index=0&id=06c0bf06&lang=scss\"\n\nimport exportComponent from \"/Users/isaacndala/Projects/wherechat/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementVNode","_createElementBlock","_createVNode","_component_top_navigation","_hoisted_3","onSubmit","type","id","placeholder","$data","$event","onKeyup","$options","_Fragment","_renderList","message","_createBlock","_component_router_link","key","to","src","_ctx","imageUrl","alt","_toDisplayString","name","content","date","_component_router_view","_component_bottom_navigation","components","BottomNavigation","TopNavigation","data","messagePath","messages","searchInput","computed","mapState","filteredMessages","i","this","length","msg","Date","toDateString","newMsgContent","slice","replace","push","methods","searchMessages","input","toLowerCase","linkList","document","getElementsByClassName","innerHTML","includes","style","display","async","res","axios","store","headers","Authorization","loggedUser","user","from","_id","findIndex","firstName","lastName","createdAt","viewed","me","error","response","status","$router","reatToChange","splice","unshift","created","fetchMessages","mounted","socket","openSocket","on","action","__exports__","render"],"sourceRoot":""}